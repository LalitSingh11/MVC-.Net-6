@using System.Web.Optimization;
@{
    ViewBag.Title = "Partner Configuration";
}


@section header {
    @Scripts.Render("~/bundles/jquery-2.0.2")
    @Scripts.Render("~/bundles/jqueryui-1.10.3")
    @Scripts.Render("~/bundles/jqGrid")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/knockout")
    @Scripts.Render("~/bundles/generalHelper")
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/Scripts/colorpicker.js")
    @Styles.Render("~/Content/themes/base/css")
    @Styles.Render("~/Content/jqGrid")
}
<head>
    <style>
        .ui-jqgrid .loading {
            top: 0 !important;
        }

        .ui-jqgrid-bdiv {
            max-height: 696px !important;
            height: auto;
        }

        .form-horizontal .control-label {
            text-align: left !important;
            width: 225px !important;
        }

        .controls {
            text-align: left !important;
        }

        .form-horizontal .control-group {
            margin-bottom: 10px !important;
        }

        label {
            font-size: 12px !important;
        }

        input[type="text"] {
            font-size: 12px !important;
            width: 240px;
        }
        .colorpicker input[type="text"] {
            font-size: 10px !important;
            width: 28px !important;
        }
        .colorpicker_hex input[type="text"] {
            font-size: 10px !important;
            width: 43px !important;
        }
        .row-fluid .span6 {
            width: 51.93617%;
        }

        hr {
            margin: 10px 0 !important;
        }

        /* Tooltip container */
        .tool-tip {
            position: absolute;
            display: inline-block;
            margin: 0 0 0 8px;
            color: #0088cc;
        }
            /* Tooltip text */
            .tool-tip .tooltiptext {
                visibility: hidden;
                width: 280px;
                background-color: #eee;
                color: #111;
                text-align: center;
                padding: 5px;
                border-radius: 3px;
                /* Position the tooltip text - see examples below! */
                position: absolute;
                z-index: 1;
                bottom: 135%;
                left: 50%;
                margin-left: -145px;
                font-size: 11px;
                font-weight: normal;
            }

            /* Show the tooltip text when you mouse over the tooltip container */
            .tool-tip:hover .tooltiptext {
                visibility: visible;
            }

            .tool-tip .tooltiptext::after {
                content: " ";
                position: absolute;
                top: 100%; /* At the bottom of the tooltip */
                left: 50%;
                margin-left: -7px;
                border-width: 7px;
                border-style: solid;
                border-color: #eee transparent transparent transparent;
            }

        tr.ui-widget-content td:nth-child(2) {
            display: flex;
            padding: 10% 10px !important;
            border-top: none;
            border-bottom: none;
        }

            tr.ui-widget-content td:nth-child(2) label {
                margin-right: 14px !important;
            }

        .ui-jqgrid tr.jqgrow {
            outline-style: none;
            border-left: none;
        }

        input.dwRadio {
            margin-top: 4px !important;
            margin-right: 3px !important;
        }

        .customizedItemDiv {
            min-height: 40px;
            display: flex;
            align-items: center;
            background: #f5f5f5;
        }
    </style>
</head>
<section>
    <div class="row">
        <div class="span6 section-heading">
            <h1>@ViewData["PartnerName"]</h1>
        </div>
        <div class="span6">
            <div class="page-header-btn-group btn-group pull-right">

                @Html.Action("ManageMenu", "Apps")
            </div>
        </div>
    </div>

    <div class="alert alert-error" id="ErrorMessage" style="display:none">
    </div>

    <ul id="optionsSelectTabs" class="nav nav-tabs">
        <li class="active"><a id="settingsTab" href="#managePartnerConfig" data-toggle="tab">Settings</a></li>
        <li><a class="tabChange" id="popupTab" href="#managePopupTitle" data-toggle="tab">Title Settings</a></li>
        @if (Roles.IsUserInRole("BHIADMIN") || Roles.IsUserInRole("PARTNERSUPERADMIN"))
        {
            if (Roles.IsUserInRole("BHIADMIN"))
            {
                <li><a class="tabChange" id="partnerSettingsTab" href="#managePartnerType" data-toggle="tab">ISP Partner Type</a></li>
            }
            <li><a class="tabChange" id="holdALotTab" href="#manageHoldALot" data-toggle="tab">Hold A Lot</a></li>
            if (Roles.IsUserInRole("BHIADMIN"))
            {
                <li><a class="tabChange" id="dreamWeaverTab" href="#manageDreamweaver" data-toggle="tab">Dreamweaver</a></li>
            }
        }
        @if (ViewBag.IspPartnerType != 1)
        {
            <li><a class="tabChange" id="pdfTab" href="#managePDFSettings" data-toggle="tab">PDF Settings</a></li>
        }
    </ul>
    <div class="tab-content">
        <div class="tab-pane active" id="managePartnerConfig">
            @Html.Partial("Partials/_partnerConfiguration")
        </div>
        <div class="tab-pane" id="managePopupTitle">
            @Html.Partial("Partials/_popupTitleSettings")
        </div>
        <div class="tab-pane" id="managePartnerType">
            @Html.Partial("Partials/_ispPartnerSettings")
        </div>
        <div class="tab-pane" id="manageHoldALot">
            @Html.Partial("Partials/_holdALotSettings")
        </div>
        <div class="tab-pane" id="manageDreamweaver">
            @Html.Partial("Partials/_dreamweaverSettings")
        </div>
        <div class="tab-pane" id="managePDFSettings">
            @Html.Partial("Partials/_pdfSettings")
        </div>
    </div>
</section>
<div class="modal-backdrop fade in" id="cc-backdrop" style="display:none;"></div>
<div class="modal fade hide" id="customContentModal" data-remote-url="@Url.Action("EditCustomizedContent", "Admin")" tabindex="-1" role="dialog" aria-labelledby="modalLabel" aria-hidden="true" style="transform: translateX(-50%)translateY(-50%); margin: 0; width: 800px;">
    <div class="edit-content-modal-body">
    </div>
</div>

@section scripts {
    <script type="text/javascript">

    function saveSuccessful() {
        resetSaveLabel();
        $("#confirmationMessage").addClass("sucessfully-alert");
        $("#confirmationMessage").text("Changes saved");
        $("#confirmationMessage").show();
        $("#confirmationMessage").fadeIn("1000").delay(2000).fadeOut('1500').hide(0);
    }
    function saveUnsuccessful() {
        resetSaveLabel();
        $("#confirmationMessage").addClass("unsucessfully-alert");
        $("#confirmationMessage").fadeIn("1000").delay(2000).fadeOut('1500').hide(0);
        $("#confirmationMessage").text("Save operation not completed");
        $("#confirmationMessage").show();
    }
    function resetSaveLabel() {
        $("#confirmationMessage").removeClass("sucessfully-alert");
        $("#confirmationMessage").removeClass("unsucessfully-alert");
        $("#confirmationMessage").text("");
    }
    function saveUnsuccessfulMessage(message) {
        resetSaveLabel();
        $("#confirmationMessage").addClass("unsucessfully-alert");
        $("#confirmationMessage").fadeIn("1000").delay(2000).fadeOut('1500').hide(0);
        $("#confirmationMessage").text(message);
        $("#confirmationMessage").show();
    }
    var prospectConfiguration = function () {
                this.RequestInfoModal = ko.observable("");
                this.BuilderLogo = ko.observable("")
                this.ID = ko.observable("0");
                this.IsISP = ko.observable("");
                this.IsPartnerConfiguration = ko.observable("true");
                this.ShowAllPlans = ko.observable("");
                this.ShowAllSpecs = ko.observable("");
                this.SendLotId = ko.observable("");
                this.ShowHomesiteFilter = ko.observable("");
                this.IsHoverAllowed = ko.observable("");
                this.ShowBottomBar = ko.observable("");
                this.LotOutlineColor = ko.observable("");
                this.LotPremiumOptionalDisplay = ko.observable("");
                this.SuppressBuilderLogo = ko.observable("");
                this.SuppressBottomCommunityName = ko.observable("");
                this.SuppressTopCommunityName = ko.observable("");
                this.DisplayLotList = ko.observable("");
                this.DisplaySpecAddress = ko.observable("");
                this.AddModelHomesBanner = ko.observable("");
                this.ReplaceKeyIcon = ko.observable("");
                this.OpenSpecDefault = ko.observable("");
                this.ShowExteriorColorScheme = ko.observable("");
                this.NHTBuilderNumber = ko.observable("");
                this.IsSecured = ko.observable("");
                this.IsStandAlonePartner = ko.observable("");
                saveConfiguration = function () {

                    var configObject = ko.toJS(this);
                    if (checkForErrors(configObject)) {
                        saveUnsuccessful();
                        return false;
                    }
                    hideErrors();                    
                    $.post("@Url.Action("SaveProspectConfiguration")", ko.toJS(this), function (data) {
                        saveSuccessful();
                        setTimeout(location.reload(), 1500);
                    }).fail(function () {
                        saveUnsuccessful();
                    });
                };
        var Sequence = 1;
                getConfiguration = function () {
                    $.post("@Url.Action("GetConfiguration")", function (data) {
                        kc.ID(data.prospectConfig.ID.toString());
                        kc.RequestInfoModal(data.prospectConfig.RequestInfoModal.toString());
                        kc.BuilderLogo(data.prospectConfig.BuilderLogo.toString());
                        kc.IsISP(data.prospectConfig.IsISP.toString());
                        kc.ShowAllPlans(data.prospectConfig.ShowAllPlans.toString());
                        kc.ShowAllSpecs(data.prospectConfig.ShowAllSpecs.toString());
                        kc.SendLotId(data.prospectConfig.SendLotId.toString());
                        kc.ShowHomesiteFilter(data.prospectConfig.ShowHomesiteFilter.toString());
                        kc.IsHoverAllowed(data.prospectConfig.IsHoverAllowed.toString());
                        kc.ShowBottomBar(data.prospectConfig.ShowBottomBar.toString());
                        if (data.prospectConfig.LotOutlineColor == null || data.prospectConfig.LotOutlineColor.trim() == "") {
                            kc.LotOutlineColor("#0375EE");
                        } else {
                            kc.LotOutlineColor(data.prospectConfig.LotOutlineColor.toString());
                        }
                        kc.LotPremiumOptionalDisplay(data.prospectConfig.LotPremiumOptionalDisplay.toString());
                        kc.SuppressBuilderLogo(data.prospectConfig.SuppressBuilderLogo.toString());
                        kc.SuppressBottomCommunityName(data.prospectConfig.SuppressBottomCommunityName.toString());
                        kc.SuppressTopCommunityName(data.prospectConfig.SuppressTopCommunityName.toString());
                        kc.DisplayLotList(data.prospectConfig.DisplayLotList.toString());
                        kc.DisplaySpecAddress(data.prospectConfig.DisplaySpecAddress.toString());
                        kc.AddModelHomesBanner(data.prospectConfig.AddModelHomesBanner.toString());
                        kc.ReplaceKeyIcon(data.prospectConfig.ReplaceKeyIcon.toString());
                        kc.OpenSpecDefault(data.prospectConfig.OpenSpecDefault.toString());
                        kc.ShowExteriorColorScheme(data.prospectConfig.ShowExteriorColorScheme.toString());
                        kc.NHTBuilderNumber(data.prospectConfig.NHTBuilderNumber.toString());
                        kc.IsSecured(data.prospectConfig.IsSecured.toString());
                        kc.IsStandAlonePartner(data.isStandAlonePartner.toString());
                        $('.color-selection').each(function () {
                            var $colorPicker = $(this).find('.colorpicker-input');
                            var $colorInput = $(this).find('.colorpicker-text');
                            var $colorValue = $colorInput.val();
                            $colorPicker.find('div').css('backgroundColor', $colorValue);
                            $colorPicker.ColorPickerSetColor($colorValue);
                            $colorPicker.ColorPicker({
                                color: $colorValue,
                                sequence: Sequence,
                                onShow: function (colpkr) {
                                    $(colpkr).fadeIn(500);
                                    return false;
                                },
                                onHide: function (colpkr) {
                                    $(colpkr).fadeOut(500);
                                    return false;
                                },
                                onChange: function (hsb, hex, rgb, el) {
                                    $colorPicker.find('div').css('backgroundColor', '#' + hex);
                                    $colorValue = '#' + hex;
                                    $colorInput.val($colorValue);
                                    $("#" + $colorInput.attr('id')).trigger("change");
                                }
                            });
                            Sequence++;
                        });

                        $('#resetLotOutline').on('click', function () {
                            var $colorPicker = $(document).find('.colorpicker-input');
                            var $colorInput = $(document).find('.colorpicker-text');
                            $colorPicker.find('div').css('backgroundColor', "#0375EE");
                            $colorInput.val("#0375EE");
                            $colorPicker.ColorPickerSetColor("#0375EE");
                            kc.LotOutlineColor("#0375EE");
                        });
                    });
                };
    };
    var kc = new prospectConfiguration();
    $.when(this.getConfiguration()).done(function () {
        ko.applyBindings(kc, document.getElementById('managePartnerConfig'));
    });

        function checkForErrors(configObject) {
            const { ShowExteriorColorScheme, NHTBuilderNumber, IsStandAlonePartner, RequestInfoModal } = configObject;

            if (ShowExteriorColorScheme == "true" && (!NHTBuilderNumber || NHTBuilderNumber.trim() == "")) {
                $("#colorSchemeError").show();
                return true;
            }
            if (IsStandAlonePartner == "true" && RequestInfoModal == "true") {
                $("#requestInfoError").show();
                return true;
            }
            return false;
        }

        function hideErrors() {
            $("#colorSchemeError, #requestInfoError").hide();
        }
    
    </script>
    <script>
        
        var popupTitleConfiguration = function () {
            this.ISP2_POPUP_HOMESITE = ko.observable("");
            this.ISP2_POPUP_LOTSIZE = ko.observable("");
            this.ISP2_POPUP_PRMPRICE = ko.observable("");
            this.ISP2_POPUP_BLOCK = ko.observable("");
            this.ISP2_POPUP_PHASE = ko.observable("");
            this.ISP2_POPUP_SWING = ko.observable("");
            this.ISP2_POPUP_ELEVATION = ko.observable("");
            this.ISP2_POPUP_ADDRESS = ko.observable("");
            this.ISP2_POPUP_AVLB_PLANS_COMM = ko.observable("");
            this.ISP2_POPUP_AVLB_PLAN_COMM = ko.observable("");
            this.ISP2_POPUP_AVLB_PLANS_LOT = ko.observable("");
            this.ISP2_POPUP_AVLB_PLAN_LOT = ko.observable("");
            this.ISP2_POPUP_SPECS_COMM = ko.observable("");
            this.ISP2_POPUP_SPEC_COMM = ko.observable("");
            this.ISP2_POPUP_SPEC_LOT = ko.observable("");
            this.ISP2_POPUP_SOLD_PLAN_LOT = ko.observable("");
            this.ISP2_POPUP_SOLD_SPEC_LOT = ko.observable("");
            this.ISP2_RGTPNL_ALLPLANS = ko.observable("");
            this.ISP2_RGTPNL_OTHERPLANS = ko.observable("");
            this.ISP3_LOTSTATUSKEY = ko.observable("");
            this.ISP_INTMEDIATITLE = ko.observable("");

            savePopupConfiguration = function () {
                $.post("@Url.Action("SavePopupConfiguration")", ko.toJS(this), function (data) {
                    saveSuccessful();
                    setTimeout(location.reload(), 1500);
                }).fail(function () {
                    saveUnsuccessful();
                });
            }
            getPopupConfiguration = function () {
                $.post("@Url.Action("GetPopupConfiguration")", function (data) {
                    kcmp.ISP2_POPUP_HOMESITE(data.ISP2_POPUP_HOMESITE[1].toString());
                    kcmp.ISP2_POPUP_LOTSIZE(data.ISP2_POPUP_LOTSIZE[1].toString());
                    kcmp.ISP2_POPUP_PRMPRICE(data.ISP2_POPUP_PRMPRICE[1].toString());
                    kcmp.ISP2_POPUP_BLOCK(data.ISP2_POPUP_BLOCK[1].toString());
                    kcmp.ISP2_POPUP_PHASE(data.ISP2_POPUP_PHASE[1].toString());
                    kcmp.ISP2_POPUP_SWING(data.ISP2_POPUP_SWING[1].toString());
                    kcmp.ISP2_POPUP_ELEVATION(data.ISP2_POPUP_ELEVATION[1].toString());
                    kcmp.ISP2_POPUP_ADDRESS(data.ISP2_POPUP_ADDRESS[1].toString());
                    kcmp.ISP2_POPUP_AVLB_PLANS_COMM(data.ISP2_POPUP_AVLB_PLANS_COMM[1].toString());
                    kcmp.ISP2_POPUP_AVLB_PLAN_COMM(data.ISP2_POPUP_AVLB_PLAN_COMM[1].toString());
                    kcmp.ISP2_POPUP_AVLB_PLANS_LOT(data.ISP2_POPUP_AVLB_PLANS_LOT[1].toString());
                    kcmp.ISP2_POPUP_AVLB_PLAN_LOT(data.ISP2_POPUP_AVLB_PLAN_LOT[1].toString());
                    kcmp.ISP2_POPUP_SPECS_COMM(data.ISP2_POPUP_SPECS_COMM[1].toString());
                    kcmp.ISP2_POPUP_SPEC_COMM(data.ISP2_POPUP_SPEC_COMM[1].toString());
                    kcmp.ISP2_POPUP_SPEC_LOT(data.ISP2_POPUP_SPEC_LOT[1].toString());
                    kcmp.ISP2_POPUP_SOLD_PLAN_LOT(data.ISP2_POPUP_SOLD_PLAN_LOT[1].toString());
                    kcmp.ISP2_POPUP_SOLD_SPEC_LOT(data.ISP2_POPUP_SOLD_SPEC_LOT[1].toString());
                    kcmp.ISP2_RGTPNL_ALLPLANS(data.ISP2_RGTPNL_ALLPLANS[1].toString());
                    kcmp.ISP2_RGTPNL_OTHERPLANS(data.ISP2_RGTPNL_OTHERPLANS[1].toString());
                    kcmp.ISP3_LOTSTATUSKEY(data.ISP3_LOTSTATUSKEY[1].toString());
                    kcmp.ISP_INTMEDIATITLE(data.ISP_INTMEDIATITLE[1].toString());

                    $('#Homesite').html(data.ISP2_POPUP_HOMESITE[1] + " 31 / Available")
                    $('#lotsize').html('<strong>' + data.ISP2_POPUP_LOTSIZE[1] + ':' + '</strong>');
                    $('#lotpremium').html('<strong>' + data.ISP2_POPUP_PRMPRICE[1] + ': ' + '</strong>' + '<span>$900</span>');
                    $('#lotblock').html('<strong>' + data.ISP2_POPUP_BLOCK[1] + ':' + '</strong>');
                    $('#lotphase').html('<strong>' + data.ISP2_POPUP_PHASE[1] + ':' + '</strong>');
                    $('#lotswing').html('<strong>' + data.ISP2_POPUP_SWING[1] + ':' + '</strong>');
                    $('#lotelevation').html('<strong>' + data.ISP2_POPUP_ELEVATION[1] + ':' + '</strong>');
                    $('#lotaddress').html('<strong>' + data.ISP2_POPUP_ADDRESS[1] + ': ' + '</strong>' + '<span>6632 Starcross Drive</span>');
                });




            };
    };

    var kcmp = new popupTitleConfiguration();
    $.when(this.getPopupConfiguration()).done(function () {
        ko.applyBindings(kcmp, document.getElementById('managePopupTitle'));
    });
    </script>
    <script>
        var partnerTypeSettings = function () {
            this.PartnerType = ko.observable("");
            this.GoogleAPIKey = ko.observable("");
            this.GoogleClientId = ko.observable("");
            this.PreviewISPPlugin = ko.observable("");
            this.NHTBuilderNumber = ko.observable("");
            this.isMapsAPIKeydiv = ko.observable(false);
            this.isPreviewISPdiv = ko.observable(true);
            this.ID = ko.observable("0");
            savePartnerTypeConfiguration = function () {
                var partnerTypeObj = ko.toJS(this);
                if ((partnerTypeObj.PartnerType != "1") && (partnerTypeObj.GoogleAPIKey.trim() == "" && partnerTypeObj.GoogleClientId.trim() == "")) {
                    alert("For GeoSpatial Partner, Google API Key or Google Client Id is required.");
                    return false;
                }
                $.post("@Url.Action("SaveIspPartnerType")", ko.toJS(this), function (data) {
                        saveSuccessful();
                        setTimeout(location.reload(), 1500);
                    }).fail(function () {
                        saveUnsuccessful();
                    });
                };
            getPartnerTypeConfiguration = function () {
                $.post("@Url.Action("GetIspPartnerType")", function (data) {
                        kcps.PartnerType(data.IspPartnerType.toString());
                        kcps.GoogleAPIKey(data.GoogleAPIKey.toString());
                    kcps.GoogleClientId(data.GoogleClientId.toString());
                    kcps.PreviewISPPlugin(data.PreviewISPPlugin.toString());
                    kcps.NHTBuilderNumber(data.NHTBuilderNumber.toString());
                    if (data.IspPartnerType.toString() != "1") {
                        kcps.isMapsAPIKeydiv(true);
                    }
                    if (data.IspPartnerType.toString() == "2") {
                        kcps.isPreviewISPdiv(false);
                    }
                    });
            };
            hideMapsDiv = function () {
                var partnerTypeObj = ko.toJS(this);
                if ($("[name='partnerType']:checked")[0].value != "1") {
                    this.isMapsAPIKeydiv(true);
                    //ko.applyBindings(kcps, document.getElementById('managePartnerType'));
                }else  {
                    this.isMapsAPIKeydiv(false);
                    //ko.applyBindings(kcps, document.getElementById('managePartnerType'));
                }
                if ($("[name='partnerType']:checked")[0].value == "2") {
                    this.isPreviewISPdiv(false);
                } else {
                    this.isPreviewISPdiv(true);
                }
            };
        };
        var kcps = new partnerTypeSettings();
        $.when(this.getPartnerTypeConfiguration()).done(function () {
            ko.cleanNode(document.getElementById('managePartnerType'));
            ko.applyBindings(kcps, document.getElementById('managePartnerType'));
        });

        $('[name=partnerType]').on('change', function () {
            //this.hideMapsDiv(true);
        });
    </script>
    <script>
        var holdALotSettings = function () {
            this.HoldALot = ko.observable("");
            this.BuilderEmail = ko.observable("");
            this.BuilderPhone = ko.observable("");
            this.isBuilderDetailsDiv = ko.observable(false);
            this.HLButtonText = ko.observable("");
            this.IsStandAlonePartner = ko.observable("");            
            saveHoldALotConfiguration = function () {
                var holdALotObj = ko.toJS(this);
                if (verifyHoldALotDetails(holdALotObj)) {
                    $.post("@Url.Action("SaveHoldALotConfiguration")", holdALotObj, function (data) {
                        saveSuccessful();
                        setTimeout(location.reload(), 1500);
                    }).fail(function () {
                        saveUnsuccessful();
                    });
                }
            };
            getHoldALotConfiguration = function () {
                $.post("@Url.Action("GetHoldALotConfiguration")", function (data) {
                    kchl.HoldALot(data.HoldALot.toString());
                    kchl.BuilderEmail(data.BuilderEmail.toString());
                    kchl.BuilderPhone(data.BuilderPhone.toString());
                    if (data.HLButtonText == null || typeof (data.HLButtonText) == "undefined" || data.HLButtonText.toString().trim() === '') {
                        data.HLButtonText = "Hold a Lot";
                    }
                    kchl.HLButtonText(data.HLButtonText.toString());
                    kchl.IsStandAlonePartner(data.IsStandAlonePartner.toString());
                    // Partner Customized Content
                    $('#customizedContentTable').html("");
                    var customizedContent = data.PartnerCustomizedContent;
                    for (var i = 0; i < customizedContent.length; i++) {
                        var itemDiv = document.createElement('div');
                        itemDiv.classList.add('color-selection');
                        itemDiv.classList.add('clearfix');
                        itemDiv.classList.add('customizedItemDiv');
                        var locationLabel = document.createElement('label');
                        locationLabel.style.width = '33%';
                        locationLabel.style.marginLeft = '5px';
                        locationLabel.innerText = customizedContent[i].CustomizedContentType.CustomizedLocations.Description;
                        itemDiv.appendChild(locationLabel);
                        var typeLabel = document.createElement('label');
                        typeLabel.style.width = '35%';
                        typeLabel.innerText = customizedContent[i].CustomizedContentType.ContentType;
                        itemDiv.appendChild(typeLabel);
                        if (customizedContent[i].CustomizedContentType.ContentType == "InternalModalLink" && customizedContent[i].Value != null && customizedContent[i].Value.trim() != "") {
                            var responseObj = JSON.parse(customizedContent[i].Value);
                            var valueDiv = document.createElement('div');
                            valueDiv.style.width = '100%';
                            var linkTextDiv = document.createElement('div');
                            var linkTitle = document.createElement('span');
                            linkTitle.innerHTML = '<B>Link Text: </B>';
                            linkTextDiv.appendChild(linkTitle);
                            var linkText = document.createElement('span');
                            linkText.innerText = responseObj.LinkText;
                            linkTextDiv.appendChild(linkText);
                            valueDiv.appendChild(linkTextDiv);
                            var modalContentDiv = document.createElement('div');
                            var modalTitle = document.createElement('span');
                            modalTitle.innerHTML = '<B>Modal Content: </B>';
                            modalContentDiv.appendChild(modalTitle);
                            var modalText = document.createElement('span');
                            modalText.innerText = responseObj.ModalContent;
                            modalContentDiv.appendChild(modalText);
                            valueDiv.appendChild(modalContentDiv);
                            itemDiv.appendChild(valueDiv);
                        } else {
                            var valueLabel = document.createElement('label');
                            valueLabel.style.width = '100%';
                            valueLabel.innerText = customizedContent[i].Value;
                            valueLabel.style.marginRight = '10px';
                            valueLabel.style.wordBreak = 'break-all';
                            itemDiv.appendChild(valueLabel);
                        }
                        var editButton = document.createElement('button');
                        editButton.id = customizedContent[i].ID;
                        editButton.setAttribute('data-set-value', customizedContent[i].Value);
                        editButton.classList.add('btn');
                        editButton.classList.add('btn-primary');
                        editButton.classList.add('pull-right');
                        editButton.classList.add('editCustomContent');
                        editButton.style.marginRight = '10px';
                        editButton.innerText = 'Edit';
                        itemDiv.appendChild(editButton);
                        let locationCode = customizedContent[i].CustomizedContentType.CustomizedLocations.LocationCode;
                        if (locationCode == "PopupFooter" || locationCode == "LeadFormHeader" || locationCode == "LeadFormTnC" || locationCode == "LeadFormFooter") {
                            itemDiv.classList.add("no-holdalot");
                        }
                        $('#customizedContentTable').append(itemDiv);
                    }

                    $('.editCustomContent').click(function () {
                        showEditContentWindow('#customContentModal', this.id, this.getAttribute('data-set-value'));
                    });

                    if (data.HoldALot.toString() == "true") {
                        kchl.isBuilderDetailsDiv(true);
                        $(".customizedItemDiv").not(".no-holdalot").show();
                    } else {
                        $(".customizedItemDiv").not(".no-holdalot").hide();
                    }

                });
            };
            hideBuilderDiv = function () {
                if ($("[name='holdALot']:checked")[0].value == "true") {
                    this.isBuilderDetailsDiv(true);
                    $(".customizedItemDiv").not(".no-holdalot").show();
                    //ko.applyBindings(kchl, document.getElementById('manageHoldALot'));
                }else  {
                    this.isBuilderDetailsDiv(false);
                    $(".customizedItemDiv").not(".no-holdalot").hide();
                    //ko.applyBindings(kchl, document.getElementById('manageHoldALot'));
                }
            };
        };
        var kchl = new holdALotSettings();
        $.when(this.getHoldALotConfiguration()).done(function () {
            ko.cleanNode(document.getElementById('manageHoldALot'));
            ko.applyBindings(kchl, document.getElementById('manageHoldALot'));
        });

        $('[name=holdALot]').on('change', function () {
            //this.hideBuilderDiv(true);
        });

        function showEditContentWindow(modalSelector, recordID, currentValue) {

            var modalReference = $(modalSelector);
            var contentSelector = modalReference.find(".edit-content-modal-body");
            var remoteURL = modalReference.attr("data-remote-url");

            //jquery ajax code
            $.ajax({
                url: remoteURL,
                type: "POST",
                data: { recordID: recordID, currentValue: escape(currentValue) },
                success: function (data, textStatus, xhr) {
                    contentSelector.html(data);
                    modalReference.removeClass("hide");
                    modalReference.addClass("in");
                    $("#customContentModal").show();
                    $("#cc-backdrop").show();
                },
                error: function (xhr, textStatus, errorThrown) {

                },
                cache: false
            });
        }

    </script>
    <script>
        var dwSettings = function () {
            this.IsDW = ko.observable("");
            this.isDWDiv = ko.observable(false);
            saveDWConfiguration = function () {
                $.post("@Url.Action("SaveDreamWeaverConfiguration")", ko.toJS(this), function (data) {
                        $.post("@Url.Action("saveDwCommunityConfiguration")", { status: commArray }, function (data) {
                        saveSuccessful();
                        setTimeout(location.reload(), 1500);
                    }).fail(function () {
                        saveUnsuccessful();
                    });
                    }).fail(function () {
                        saveUnsuccessful();
                    });
            };
            getDWConfiguration = function () {
                $.post("@Url.Action("GetDreamWeaverConfiguration")", function (data) {
                    kcdw.IsDW(data.IsDreamWeaver.toString());
                    if (data.IsDreamWeaver.toString() == "true") {
                        kcdw.isDWDiv(true);
                    }
                    $('#Communities').trigger('reloadGrid');
                    commArray = [];
                    });
            };
            hideDWDiv = function () {
                if ($("[name='isDW']:checked")[0].value == "true") {
                    this.isDWDiv(true);
                    //ko.applyBindings(kcdw, document.getElementById('manageDreamweaver'));
                }else  {
                    this.isDWDiv(false);
                    //ko.applyBindings(kcdw, document.getElementById('manageDreamweaver'));
                }
            };
        };
        var kcdw = new dwSettings();
        $.when(this.getDWConfiguration()).done(function () {
            ko.cleanNode(document.getElementById('manageDreamweaver'));
            ko.applyBindings(kcdw, document.getElementById('manageDreamweaver'));
        });

        $('[name=isDW]').on('change', function () {
            //this.hideDWDiv(true);
        });
    </script>
    <script>
        $(document).ready(function () {

        });

        $(function () {
            var $text = $('#Homesite');
            var $input = $('#lotHomesite');
            $input.on('keydown', function () {
                setTimeout(function () {
                    $text.html($input.val() + " 31 / Available");
                }, 0);
            });
        })

        $(function () {

            $('#lotSize,#lotPremiumPrice,#lotBlock,#lotPhase,#lotSwing,#lotElevation,#lotAddress').on('keydown', function () {
                setTimeout(function () {
                    $('#lotsize').html('<strong>' + $('#lotSize').val() + ':' + '</strong>');
                    $('#lotpremium').html('<strong>' + $('#lotPremiumPrice').val() + ': ' + '</strong>' + '<span>$900.00</span>');
                    $('#lotblock').html('<strong>' + $('#lotBlock').val() + ':' + '</strong>');
                    $('#lotphase').html('<strong>' + $('#lotPhase').val() + ':' + '</strong>');
                    $('#lotswing').html('<strong>' + $('#lotSwing').val() + ':' + '</strong>');
                    $('#lotelevation').html('<strong>' + $('#lotElevation').val() + ':' + '</strong>');
                    $('#lotaddress').html('<strong>' + $('#lotAddress').val() + ': ' + '</strong>' + '<span>6632 Starcross Drive</span>');
                }, 0);
            });

        });

        function validateEmail(email) {
            var regex = /^[a-z0-9\.\_%+-]+@@[a-z0-9\.\-]+\.[a-z]{2,4}$/i;
            return regex.test(email);
        }
        function validatePhone(phone) {
            var regex = /^[\+]?[(]?[0-9]{3}[)]?[-\s\.]?[0-9]{3}[-\s\.]?[0-9]{4,6}$/im;
            return regex.test(phone);
        }

        function verifyHoldALotDetails(holdALotObj) {
            document.getElementById("holdALotErrorDiv").style.display = "none";
            document.getElementById("holdALotError").innerHTML = null;
            var error = false;

            if ((holdALotObj.HoldALot == "true" && !validateEmail(holdALotObj.BuilderEmail.trim())) && !(holdALotObj.BuilderEmail.trim() == '')) {
                var errorItem = document.createElement('li');
                errorItem.innerHTML = "Invalid Email Format."
                document.getElementById("holdALotError").appendChild(errorItem);
                error = true;
            }
            if (holdALotObj.HoldALot == "true" && holdALotObj.IsStandAlonePartner == "true") { 
                var errorItem = document.createElement('li');
                errorItem.innerHTML = "You cannot enable this feature until this Partner has been linked to BDXLive."
                document.getElementById("holdALotError").appendChild(errorItem);
                error = true;
            }
            //if (holdALotObj.HoldALot == "true" && holdALotObj.BuilderPhone.trim() == "") {
            //    var errorItem = document.createElement('li');
            //    errorItem.innerHTML = "Phone Number is required."
            //    document.getElementById("holdALotError").appendChild(errorItem);
            //    error = true;
            //} else
            if ((holdALotObj.HoldALot == "true" && !validatePhone(holdALotObj.BuilderPhone)) && !(holdALotObj.BuilderPhone.trim() == '')) {
                var errorItem = document.createElement('li');
                errorItem.innerHTML = "Invalid Phone Number Format."
                document.getElementById("holdALotError").appendChild(errorItem);
                error = true;
            }
            if (error) {
                document.getElementById("holdALotErrorDiv").style.display = "block";
                return false;
            } else {
                return true;
            }
        }
    </script>
    <script>
        var pdfSettings = function () {
            this.pdfDisclaimer = ko.observable("");
            savePDFDisclaimer = function () {
                    $.post("@Url.Action("SavePDFSettings")", ko.toJS(this), function (data) {
                        saveSuccessful();
                        setTimeout(location.reload(), 1500);
                    }).fail(function () {
                        saveUnsuccessful();
                    });
            };
            getPDFSettings = function () {
                $.post("@Url.Action("GetPDFSettings")", function (data) {
                    kchlpdf.pdfDisclaimer(data.pdfDisclaimer.toString());

                    });
            };
            hideBuilderDiv = function () {
                if ($("[name='holdALot']:checked")[0].value == "true") {
                    this.isBuilderDetailsDiv(true);
                    $(".customizedItemDiv").not(".no-holdalot").show();
                    //ko.applyBindings(kchl, document.getElementById('manageHoldALot'));
                }else  {
                    this.isBuilderDetailsDiv(false);
                    $(".customizedItemDiv").not(".no-holdalot").hide();
                    //ko.applyBindings(kchl, document.getElementById('manageHoldALot'));
                }
            };
        };
        var kchlpdf = new pdfSettings();
        $.when(this.getPDFSettings()).done(function () {
            ko.cleanNode(document.getElementById('managePDFSettings'));
            ko.applyBindings(kchlpdf, document.getElementById('managePDFSettings'));
        });
    </script>
}