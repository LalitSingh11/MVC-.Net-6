﻿@using System.Web.Optimization;
@{
    ViewBag.Title = "Index";
}
@section header {
    @Scripts.Render("~/bundles/jquery-2.0.2")
    @Scripts.Render("~/bundles/jqueryui-1.10.3")
    @Scripts.Render("~/bundles/jqGrid")
    @Scripts.Render("~/bundles/knockout")
    @Scripts.Render("~/bundles/sortable")
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/bundles/communities")
    @Styles.Render("~/Content/themes/base/css")
    @Styles.Render("~/Content/jqGrid")
    @Styles.Render("~/Content/fineuploader")
    @Scripts.Render("~/bundles/jqueryval")
}
<style>
    #filters {
        margin-bottom: 10px;
    }

    .tab-content {
        overflow: hidden;
        /*padding-top: 15px;*/
    }

    .goog-tooltip {
        z-index: 9999;
    }
</style>
<div class="row">
    <div class="span6 section-heading" id="HeaderDiv">
        <h1>@ViewData["PartnerName"]</h1>
    </div>
    <div class="span6">
        <div class="page-header-btn-group btn-group pull-right">
            @Html.Action("ManageMenu", "Apps")
        </div>
    </div>
</div>
<div class="alert alert-error" id="ErrorMessage" style="display:none">   </div>
<div id="filters">
    <select id="MonthDropDown">
        <option value="0" selected>All</option>
        <option value="1">Jan</option>
        <option value="2">Feb</option>
        <option value="3">Mar</option>
        <option value="4">Apr</option>
        <option value="5">May</option>
        <option value="6">Jun</option>
        <option value="7">Jul</option>
        <option value="8">Aug</option>
        <option value="9">Sep</option>
        <option value="10">Oct</option>
        <option value="11">Nov</option>
        <option value="12">Dec</option>
    </select>
    <select id="YearDropDown"></select>
    <select class="span4" id="drpCommunity">
        <option value="0">--Select Community Name--</option>
        @foreach (var opt in ViewData["Communities"] as IEnumerable<SelectListItem>)
        {
            <option value="@opt.Value">@opt.Text</option>
        }
    </select>
</div>
<div id='graph-images' style='display:none'></div>
<ul id="optionsSelectTabs" class="nav nav-tabs">
    <li class="active"><a class="tabChange" id="UsersUsingNHNTab" href="#UsersUsingNHNApp" data-toggle="tab">New Home Navigator Usage Report</a></li>
    <li><a class="tabChange" id="SalesUsersPerfTab" href="#SlaesUSerPerformance" data-toggle="tab">Sales Users Performance</a></li>
    <li><a class="tabChange" id="AvgAppUsageTimeTab" href="#AvgAppUSageTime" data-toggle="tab">BDX Sales Navigator Usage Report</a></li>
</ul>
<div class="tab-content">
    <div class="tab-pane active" id="UsersUsingNHNApp">
        <div id="columnchart_material" style="height:500px"></div>
    </div>
    <div class="tab-pane" id="SlaesUSerPerformance">
        <div id="curve_chart"></div>
    </div>
    <div class="tab-pane" id="AvgAppUSageTime">
        <div id="curve_chart2"></div>
    </div>
</div>
<button class="btn btn-primary pull-right" id="GeneratePdfForActive">Generate PDF</button>
<div style="padding: 41px 60px 44px 39px;">
    <div class="sa-loading-bar" style="display:none">
        <div class="sa-loading-info">
            <img src="~/Content/images/pdfloading.svg" />
            <p class="loading-text">Generating PDF...</p>
        </div>
    </div>


</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.3.4/jspdf.debug.js"></script>
<script>
    var NewProspects = [];
    var NewConsumers = [];
    var monthsData = new Array();
    monthsData[0] = "Jan";
    monthsData[1] = "Feb";
    monthsData[2] = "Mar";
    monthsData[3] = "Apr";
    monthsData[4] = "May";
    monthsData[5] = "Jun";
    monthsData[6] = "Jul";
    monthsData[7] = "Aug";
    monthsData[8] = "Sep";
    monthsData[9] = "Oct";
    monthsData[10] = "Nov";
    monthsData[11] = "Dec";
    var reportsData = new Array();
    reportsData[0] = "New Home Navigator Usage Report";
    reportsData[1] = "Sales User Performance";
    reportsData[2] = "BDX Sales Navigator Usage Report (In Minutes)";

    var selectedYear = new Date().getFullYear();
    var selectedMonth = 0;
    var selectedCommunity = '0';
    $(document).ready(function () {
        var min = new Date().getFullYear() - 10,
            max = new Date().getFullYear(),
            select = document.getElementById('YearDropDown');

        for (var i = min; i <= max; i++) {
            var opt = document.createElement('option');
            opt.value = i;
            opt.innerHTML = i;
            if (i == max) {
                opt.selected = true;
            }
            select.appendChild(opt);
        }
    });
    $(document).on('change', '#YearDropDown', function () {
        selectedYear = $(this).val();
        drawChartLine();
        drawChartLineAverage();
        if ($('#optionsSelectTabs li:first').hasClass("active")) {
            drawChart();
        }
    });
    $(document).on('change', '#MonthDropDown', function () {
        selectedMonth = $(this).val();
        drawChartLine();
        drawChartLineAverage();
        if ($('#optionsSelectTabs li:first').hasClass("active")) {
            drawChart();
        }
    });
    $(document).on('change', '#drpCommunity', function () {
        selectedCommunity = $(this).val();
        drawChartLine();
        if ($('#optionsSelectTabs li:first').hasClass("active")) {
            drawChart();
        }
    });
    $(document).on('click', '#UsersUsingNHNTab', function () {
        selectedCommunity = $('#drpCommunity').val();
        selectedMonth = $('#MonthDropDown').val();
        selectedYear = $('#YearDropDown').val();
        drawChart();
    });
    $(document).on('click', '#SalesUsersPerfTab', function () {
        selectedCommunity = $('#drpCommunity').val();
        selectedMonth = $('#MonthDropDown').val();
        selectedYear = $('#YearDropDown').val();
        drawChartLine();
    });
    $(document).on('click', '#AvgAppUsageTimeTab', function () {
        selectedCommunity = $('#drpCommunity').val();
        selectedMonth = $('#MonthDropDown').val();
        selectedYear = $('#YearDropDown').val();
        drawChartLineAverage();
    });
    //$(document).on('click', '#GenerateAllChartPdfs', function () {
    //    generatePdf("","");
    //});

    $(document).on('click', '#GeneratePdfForActive', function () {
        var activeTabId = $('.tab-pane.active').attr('id');
        if (activeTabId == "UsersUsingNHNApp") {
            generatePdf("NewProspectsChart", reportsData[0]);
        }
        else if (activeTabId == "SlaesUSerPerformance") {
            generatePdf("SalesPerformanceChart", reportsData[1]);
        }
        else if (activeTabId == "AvgAppUSageTime") {
            generatePdf("AppTimeUsageChart", reportsData[2]);
        }

    });

    function generatePdf(report, Name) {
        $('.sa-loading-bar').css('display', 'block');
        var doc = new jsPDF('p', 'pt', 'a4', false) /* Creates a new Document */
        doc.setFontSize(15); /* Define font size for the document */
        var yAxis = 30;
        if (report == "") {
            var imageTags = $('#graph-images img');
        } else {
            var imageTags = $('#graph-images img#' + report);
        }
        for (var i = 0; i < imageTags.length; i++) {
            if (i % 2 == 0 && i != 0) { /* I want only two images in a page */
                doc.addPage();  /* Adds a new page*/
                yAxis = 30; /* Re-initializes the value of yAxis for newly added page*/
            }
            if (Name == typeof (undefined) || Name == "") {
                var str = reportsData[i];
                var someText = str;
            } else {
                var someText = Name;
            }
            doc.text(60, yAxis, someText); /* Add some text in the PDF */
            yAxis = yAxis + 20; /* Update yAxis */
            doc.addImage(imageTags[i], 'png', 40, yAxis, 530, 350, undefined, 'none');
            yAxis = yAxis + 360; /* Update yAxis */
        }
        var downloadName = "";
        if (imageTags.length > 1) {
            downloadName = 'CombinedReports';
        } else {
            if (report == "NewProspectsChart") {
                downloadName = 'New_Home_Navigator_Usage_Report';
            } else if (report == "SalesPerformanceChart") {
                downloadName = 'Sales_Users_Performance';
            } else {
                downloadName = 'BDX_Sales_Navigator_Usage_Report';
            }
        }
        doc.save(downloadName + '.pdf');
        $('.sa-loading-bar').css('display', 'none');
    }
</script>
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">
    google.charts.load('current', { 'packages': ['corechart', 'bar', 'line'] });
    google.charts.setOnLoadCallback(drawChart);
    function drawChart() {
        var lineChartJsonData = $.ajax({
            type: 'POST',
            url: "/Reports/GetNewProspectsAndConsumersByYear",
            data: { year: selectedYear, month: selectedMonth, community: selectedCommunity },
            dataType: "json",
            async: false,
            beforeSend: function () {
            },
            success: function (data) {
            },
        }).responseText;
        lineChartJsonData = $.parseJSON(lineChartJsonData);
        if (lineChartJsonData.length <= 0) {
            var data = google.visualization.arrayToDataTable([
         [{
             f: 'Date',
             type: 'string' // wont work whithout this
         }, {
             f: 'Line',
             type: 'number' // wont work whithout this
         }], ]);
            var options = {
                title: 'No usage across this time period',
                vAxis: { viewWindowMode: "explicit", viewWindow: { min: 0 } },
                height: 500
            };
            var i = selectedMonth == 0 ? 0 : selectedMonth - 1;
            if (data.getNumberOfRows() == 0) { // if you have no data, add a data point and make the series transparent
                data.addRow([monthsData[i], 0])
                options.series = {
                    0: {
                        color: '#fff'
                    }
                }
            }
        } else {
            var output = lineChartJsonData.map(function (obj) {
                return Object.keys(obj).map(function (key) {
                    return obj[key];
                });
            });
            var text = 'Month';
            if (selectedMonth > 0) {
                text = ' ' + monthsData[selectedMonth - 1] + ' ';
            }
            output.splice(0, 0, [text, 'New Prospects', 'Prospects using New Home Navigator']);
            var data = google.visualization.arrayToDataTable(output);

            var options = {
                //chart: {
                //    title: 'Prospects using New Home Navigator',
                //    //vAxis: { viewWindowMode: "explicit", viewWindow: { min: 0 } }
                //},
                title: 'New Home Navigator Usage Report',
                hAxis: {
                    slantedText: true,  /* Enable slantedText for horizontal axis */
                    slantedTextAngle: 90 /* Define slant Angle */
                }
            };
        }

        var chart = new google.visualization.ColumnChart(document.getElementById('columnchart_material'));
        google.visualization.events.addListener(chart, 'ready', function () {
            $('#NewProspectsChart').remove();
            var content = '<img id="NewProspectsChart" src="' + chart.getImageURI() + '">';
            $('#graph-images').append(content);
        });
        chart.draw(data, options);
    }
</script>
<script type="text/javascript">
    google.charts.setOnLoadCallback(drawChartLine);
    var month = 0;
    function drawChartLine() {
        var lineChartJsonData = $.ajax({
            type: 'POST',
            url: "/Reports/GetSalesUsersData",
            data: { year: selectedYear, month: selectedMonth, community: selectedCommunity },
            dataType: "json",
            async: false,
            beforeSend: function () {
            },
            success: function (data) {
            },
        }).responseText;
        lineChartJsonData = $.parseJSON(lineChartJsonData);
        var UserNames = lineChartJsonData.UserNames;
        var chartData = lineChartJsonData.chartData;
        if (chartData.length <= 0 || UserNames.length <= 0) {
            var data = google.visualization.arrayToDataTable([
          [{
              f: 'Date',
              type: 'string' // wont work whithout this
          }, {
              f: 'Line',
              type: 'number' // wont work whithout this
          }], ]);

            var options = {
                title: 'No usage across this time period',
                vAxis: { viewWindowMode: "explicit", viewWindow: { min: 0 } },
                height: 500
            };
            var i = selectedMonth == 0 ? 0 : selectedMonth - 1;
            if (data.getNumberOfRows() == 0) { // if you have no data, add a data point and make the series transparent
                data.addRow([monthsData[i++], 0])
                options.series = {
                    0: {
                        color: 'transparent'
                    }
                }
            }
        }
        else {
            if (selectedMonth == 0) {
                UserNames.splice(0, 0, "month");
                for (i = 0; i < 12; i++) {
                    chartData[i].splice(0, 0, monthsData[i])
                }
                var data = google.visualization.arrayToDataTable([
                  UserNames,
                    chartData[0],
                    chartData[1],
                    chartData[2],
                    chartData[3],
                    chartData[4],
                    chartData[5],
                    chartData[6],
                    chartData[7],
                    chartData[8],
                    chartData[9],
                    chartData[10],
                    chartData[11],
                ]);
            } else {
                UserNames.splice(0, 0, " " + month[selectedMonth - 1] + " ");
                //for (i = 0; i < 12; i++) {
                //    chartData[i].splice(0, 0, monthsData[i])
                //}
                var arr = new Array();
                arr.push(UserNames);
                for (var i = 0; i < chartData.length; i++) {
                    arr.push(chartData[i]);
                }
                var data = google.visualization.arrayToDataTable(arr);
            }
            var options = {
                title: 'Sales Users Performance',
                // Allow multiple
                // simultaneous selections.
                selectionMode: 'multiple',
                // Trigger tooltips
                // on selections.

                // Group selections
                // by x-value.
                aggregationTarget: 'series',
                //legend: { position: 'bottom' },
                //focusTarget :'category',
                vAxis: { viewWindowMode: "explicit", viewWindow: { min: 0 } },
                hAxis: {
                    //direction: -1,
                    slantedText: true,
                    slantedTextAngle: 90 // here you can even use 180
                },
                height: 500
            };
        }
        var chart = new google.visualization.LineChart(document.getElementById('curve_chart'));
        google.visualization.events.addListener(chart, 'ready', function () {
            $('#SalesPerformanceChart').remove();
            var content = '<img id="SalesPerformanceChart" src="' + chart.getImageURI() + '">';
            $('#graph-images').append(content);
        });
        chart.draw(data, options);
    }
</script>
<script type="text/javascript">
    google.charts.setOnLoadCallback(drawChartLineAverage);
    // Set a callback to run when the Google Visualization API is loaded.
    function drawChartLineAverage() {
        var lineChartJsonData = $.ajax({
            type: 'POST',
            url: "/Reports/GetAverageAppTImeUsageOfSalesUsers",
            data: { year: selectedYear, month: selectedMonth },
            dataType: "json",
            async: false,
            beforeSend: function () {
            },
            success: function (data) {
            },
        }).responseText;
        lineChartJsonData = $.parseJSON(lineChartJsonData);
        var UserNames = lineChartJsonData.UserNames;
        var chartData = lineChartJsonData.chartData;
        if (chartData.length <= 0 || UserNames.length <= 0) {
            var data = google.visualization.arrayToDataTable([
          [{
              f: 'Date',
              type: 'string' // wont work whithout this
          }, {
              f: 'Line',
              type: 'number' // wont work whithout this
          }], ]);

            var options = {
                title: 'No usage across this time period',
                vAxis: { viewWindowMode: "explicit", viewWindow: { min: 0 } },
                height: 500
            };
            var i = selectedMonth == 0 ? 0 : selectedMonth - 1;
            if (data.getNumberOfRows() == 0) { // if you have no data, add a data point and make the series transparent
                data.addRow([monthsData[i++], 0])
                options.series = {
                    0: {
                        color: 'transparent'
                    }
                }
            }
        }
        else {
            if (selectedMonth == 0) {
                UserNames.splice(0, 0, "month");
                for (i = 0; i < 12; i++) {
                    chartData[i].splice(0, 0, monthsData[i])
                }
                var data = google.visualization.arrayToDataTable([
                  UserNames,
                    chartData[0],
                    chartData[1],
                    chartData[2],
                    chartData[3],
                    chartData[4],
                    chartData[5],
                    chartData[6],
                    chartData[7],
                    chartData[8],
                    chartData[9],
                    chartData[10],
                    chartData[11],
                ]);
            } else {
                UserNames.splice(0, 0, " " + monthsData[selectedMonth - 1] + " ");
                //for (i = 0; i < 12; i++) {
                //    chartData[i].splice(0, 0, monthsData[i])
                //}
                var arr = new Array();
                arr.push(UserNames);
                for (var i = 0; i < chartData.length; i++) {
                    arr.push(chartData[i]);
                }
                var data = google.visualization.arrayToDataTable(arr);
            }
            var options = {
                title: 'BDX Sales Navigator Usage Report (In Minutes)',
                // Allow multiple
                // simultaneous selections.
                selectionMode: 'multiple',
                // Trigger tooltips
                // on selections.
                // Group selections
                // by x-value.
                aggregationTarget: 'series',
                //legend: { position: 'bottom' },
                vAxis: { viewWindowMode: "explicit", viewWindow: { min: 0 } },
                hAxis: {
                    slantedText: true,
                    slantedTextAngle: 90 // here you can even use 180
                },
                height: 500
            };

        }
        var chart = new google.visualization.LineChart(document.getElementById('curve_chart2'));
        google.visualization.events.addListener(chart, 'ready', function () {
            $('#AppTimeUsageChart').remove();
            var content = '<img id="AppTimeUsageChart" src="' + chart.getImageURI() + '">';
            $('#graph-images').append(content);
        });
        chart.draw(data, options);
    }
</script>
