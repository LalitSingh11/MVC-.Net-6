@using MvcJqGrid
@using MvcJqGrid.Enums
@using System.Web.Optimization;
@model IEnumerable<BHI.SalesArchitect.Model.ConsumerAppResource>
@{
    ViewBag.Title = "New Home Navigator";
}
@{
    var PROSPECTS_GRID = "NewHomeAssistant";
}
@section header {
    @Scripts.Render("~/bundles/jquery-2.0.2")
    @Scripts.Render("~/bundles/jqueryui-1.10.3")
    @Scripts.Render("~/bundles/jqGrid")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/knockout")
    @Scripts.Render("~/bundles/generalHelper")
    @Scripts.Render("~/bundles/bootstrap")
    @Styles.Render("~/Content/themes/base/css")
    @Styles.Render("~/Content/jqGrid")
}
<style>
    .sa-loading-info {
        position: absolute;
        top: 40%;
        bottom: 0;
        right: 0;
        left: 0;
        margin: 0 auto;
        width: 150px;
        text-align: center;
        font-weight: bold;
        color: #474747;
    }

        .sa-loading-info img {
            width: 75px;
            height: 75px;
        }

    .sa-loading-bar {
        position: absolute;
        top: 0;
        bottom: 0;
        right: 0;
        left: 0;
        background: rgba(202,202,202,.8);
        z-index: 11;
    }

    #downloadQR {
        display: inline-block;
        margin: 0 10px;
    }

    #botttom-nav ul {
        list-style: none;
        margin-left: -5px;
        padding-bottom: 15px;
        margin-top: 16px;
    }

        #botttom-nav ul li {
            float: left;
            padding: 0px 5px;
            border-right: 1px solid #000;
            font-size: 12px;
            line-height: 14px;
        }

            #botttom-nav ul li:last-child {
                border-right: none;
            }
</style>

<div class="row">
    <div class="span6 section-heading">
        <h1></h1>
    </div>
    <div class="span6">
        <div class="page-header-btn-group btn-group pull-right">
            @Html.Action("ManageMenu", "Apps")
        </div>
    </div>
</div>
<ul id="optionsSelectTabs" class="nav nav-tabs">
    <li class="active"><a id="GenerateCode" href="#manageGenerateCommunity" data-toggle="tab">Generate Community Code/QR Code</a></li>
    @*<li><a id="DesignTab" href="#manageDesignStudio" data-toggle="tab">Design Studio</a></li>
        <li><a class="tabChange" id="LotsTab" href="#manageResourceCentre" data-toggle="tab">Resource Center</a></li>*@
    @*<li><a class="tabChange" id="App" href="#appConfiguration" data-toggle="tab">App Configuration</a></li>*@
</ul>
<div class="tab-content">
    <div class="span4" style="margin:0 0 10px 0; float:none;">
        <select class="span4" id="drpPartner">
            <option value="">-- Select Partner Name --</option>
            @foreach (var opt in ViewData["Partners"] as IEnumerable<BHI.SalesArchitect.Model.Partner>
            )
            {
                <option value="@opt.ID">@opt.Name</option>
            }
        </select>
        <select class="span4" id="drpBuilder">
            <option value="">-- Select Builder Name --</option>
        </select>

    </div>
    <div class="tab-pane active" id="manageGenerateCommunity">
        <div id="communitiesGrid">

        </div>

    </div>

    @*<div class="tab-pane " id="manageDesignStudio">
            @Html.Partial("Partials/_designStudio")
        </div>*@

    @*<div class="tab-pane" id="manageResourceCentre" data-bind="template: { name: 'resourceConfigurationTemplate', foreach: Configuration.resourceHeadings }">
            @{ViewBag.Grids = false; }
            @Html.Partial("Partials/_resourceCentre", Model)
        </div>*@

    @*<div class="tab-pane" id="appConfiguration">
            <div style="display: inline-block;width: 50.1%;margin-top: -50px;float: right;">
                <div class="community-name" style="margin-left:0">
                    <select class="span4" id="drpCommunity">
                        <option value="">--Select Community Name--</option>
                    </select>
                </div>
            </div>
            <div class="background-image">
                <h5>Background Image Upload</h5>
                <div class="upload-file">
                    <input id="upload-file-image" type="file" class="input-default">
                    <div class="browse-file"><input type="button" value="Browse.."><span id="file_selected_text">No files Selected</span></div>
                </div>
                <span class="file-type">.jpg/.png only</span>
                <div class="uploaded-file">
                    <img id="uploaded-file-image" OnError="HandleError(this)" />
                </div>
                <a class="deleteImage btn btn-danger" disabled="disabled">Delete</a>
                <button class="btn btn-primary upload-image-btn" type="button" onclick="saveBackgroundImage();">Upload Image</button>
            </div>





        </div>*@
</div>

@section modal {

    <div id="myModal" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">×</span>
            </button>
            <h4 class="modal-title" id="mySmallModalLabel">
                This will delete the selected image(s). Are you sure?
                <a class="anchorjs-link" href="#mySmallModalLabel">
                    <span class="anchorjs-icon"></span>
                </a>
            </h4>
        </div>
        <div class="modal-body">
            <div class="row">
                <!-- Indicates a successful or positive action -->
                <div class="span1">
                    <button type="button" class="btn btn-success btn-confirm">
                        OK
                    </button>
                </div>
                <!-- Indicates a dangerous or potentially negative action -->
                <div class="span1">
                    <button type="button" class="btn btn-danger">
                        Cancel
                    </button>
                </div>
            </div>
        </div>
    </div>
    <div id="myModalDelete" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">×</span>
            </button>
            <h4 class="modal-title" id="mySmallModalLabel">
                This will delete the selected article(s). Are you sure?
                <a class="anchorjs-link" href="#mySmallModalLabel">
                    <span class="anchorjs-icon"></span>
                </a>
            </h4>
        </div>
        <div class="modal-body">
            <div class="row">
                <!-- Indicates a successful or positive action -->
                <div class="span1">
                    <button type="button" class="btn btn-success btn-confirm">
                        OK
                    </button>
                </div>
                <!-- Indicates a dangerous or potentially negative action -->
                <div class="span1">
                    <button type="button" class="btn btn-danger">
                        Cancel
                    </button>
                </div>
            </div>
        </div>
    </div>
}

@section scripts {
    <script src="//cdn.ckeditor.com/4.16.2/basic/ckeditor.js"></script>
    <script>
        function CommunitiesLoadCompleted() {
            var count = parseInt($("#Communities").getGridParam("reccount"));
            if (count == 0) {
                var row = $("#Communities")[0].insertRow(-1);
                var cell = $(row.insertCell(-1));
                cell.html("No records found.");
                cell.attr("colspan", "4").attr("align", "center");
            }
        }
        function FormatColumn(cellvalue, options, rowobject) {
            if (cellvalue != '' && cellvalue != null && typeof (cellvalue) != "undefined") {
                return '<a style="cursor:pointer;" href="' + cellvalue + '" >' + cellvalue + '</a>';
            }
            return '<a style="cursor:pointer;" class="GenerateCommunityCode" >Generate Codes</a>';
        }
        function FormatImage(cellvalue, options, rowobject) {
            if (rowobject[2] != '' && rowobject[2] != null && typeof (rowobject[2]) != "undefined" && cellvalue != '' && cellvalue != null && typeof (cellvalue) != "undefined") {
                return '<a target="_blank" style="text-decoration:none;" href="' + cellvalue + '/"> <img onerror="imgError(this)" style="height:50px;" src="' + cellvalue + '/" /></a><input type="image" src="/Content/images/icon_download.png" id="downloadQR" onclick="downloadQRCode(this)"><input type="image" src="/Content/images/icon_link.png" id="copyQRLink" onClick="copyQRCode(this)" >';
            } else {
                return '<a style="cursor:pointer;" class="GenerateCommunityCode" >Generate QR Code</a>';

            }
            return '';
        }
        function FormatImageBuilder(cellvalue, options, rowobject) {
            if (rowobject[2] != '' && rowobject[2] != null && typeof (rowobject[2]) != "undefined" && cellvalue != '' && cellvalue != null && typeof (cellvalue) != "undefined") {
                return '<a target="_blank" style="text-decoration:none;" href="' + cellvalue + '/"> <img onerror="imgError(this)" style="height:50px;" src="' + cellvalue + '/" /></a><input type="image" src="/Content/images/icon_download.png" id="downloadQR" onclick="downloadQRCode(this)"><input type="image" src="/Content/images/icon_link.png" id="copyQRLink" onClick="copyQRCode(this)" >';
            }
            else {
                return '<a style="cursor:pointer;" class="GenerateCommunityCode" >Generate QR Code</a>';

            }
            return '';
        }
        function imgError(image) {
            image.onerror = "";
            //$(image).parent('a').parent('td').prev().find('a').replaceWith('<a style="cursor:pointer;" class="GenerateCommunityCode" >Generate Codes</a>');
            var p = $(image).parent().siblings('input');
            p.hide();
            $(image).parent('a').replaceWith('<a style="cursor:pointer;" class="GenerateCommunityCode" >Generate QR Code</a>');
            return true;
        }

        function copyQRCode(e) {

            var linkElement = $(e).siblings('a');
            var link = linkElement.attr('href');

            var dummy = document.createElement("input");
            document.body.appendChild(dummy);
            dummy.setAttribute('value', link);
            dummy.select();
            document.execCommand("copy");
            document.body.removeChild(dummy);

            document.execCommand("copy");
            alert("Link Copied to Clipboard");
        }

        function downloadQRCode(e) {
            var linkElement = $(e).siblings('a');
            var QRlink = linkElement.attr('href');
            QRlink = QRlink.replace('QRCode', 'QRCode/Download');
            var link = document.createElement('a');
            link.href = QRlink;
            link.download = 'Download.jpeg';
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
        }

    </script>
    <script>
        var builderId = 0;
        var uploadedFilePath = "";
        $(document).ready(function () {
            var gridsLoaded = false;
            // Replace the <textarea id="editor1"> with a CKEditor
            // instance, using default configuration.
            //CKEDITOR.replace('IntroText');
            //CKEDITOR.replace('DidYouKnow');
            //consumerAppConfiguration.getConfiguration();
            $('#saveChanges').on('click', function () {
                consumerAppConfiguration.saveConfiguration();
            });
            $('#cancelChanges').on('click', function () {
                consumerAppConfiguration.getConfiguration();
            });
            $('#resourceSaveChanges').on('click', function () {
                consumerAppResources.saveAppResources();
            });
            $('#resourceCancelChanges').on('click', function () {
                consumerAppResources.cancelAppResources();
            });
            $("#myModal .btn-confirm").click(function () {
                $("#myModal").modal("toggle");
                DeleteImages();
            });
            $(".deleteImage").click(function (e) {
                e.stopImmediatePropagation();
                if ($('.deleteImage').attr('disabled') == 'disabled') {
                } else {
                    $("#myModal").modal("toggle");
                }
            });
            $("#myModalDelete .btn-confirm").click(function () {
                $("#myModalDelete").modal("toggle");
                DeleteResourceCentreLinks();
            });

            $('#drpPartner').on('change', function () {
                var partnerID = $('#drpPartner').val();
                $('#drpBuilder').find('option').remove();
                $('.loading-text').text('Loading Builders...');
                $('.sa-loading-bar').css('display', 'block');
                $('#drpBuilder').append('<option value="">Loading Builders...</option>');
                $('#communitiesGrid').empty();
                 $.ajax({
                        url: '@Url.Action("GetBuilders")',
                     type: 'POST',
                     data: { partnerID: parseInt($('#drpPartner').val()) },
                        success: function (data) {
                            $('#drpBuilder').find('option').remove();
                            $('#drpBuilder').append('<option value="">--Select Builder Name--</option>');

                            for (var i = 0; i < data.length; i++) {
                                $('#drpBuilder').append('<option value="' + data[i].Value + '">' + data[i].Text + '</option>')
                            }
                            $('.sa-loading-bar').css('display', 'none');
                            //builderId = parseInt($('#drpBuilder').val())
                     }, error: function () {
                            $('.sa-loading-bar').css('display', 'none');
                        }
                    });
            });

            $('#GenerateCode').click(function () {
                if (parseInt($('#drpBuilder').val()) > 0 && parseInt($('#drpBuilder').val()) != builderId ) {
                    $('#communitiesGrid').html('');
                    $.ajax({
                        url: '@Url.Action("GetCommunitiesListGrid")',
                        type: 'POST',
                        data: { builderBrandBDXID: parseInt($('#drpBuilder').val()), partnerID: parseInt($('#drpPartner').val()) },
                        success: function (data) {
                            $('#communitiesGrid').html(data);
                            builderId = parseInt($('#drpBuilder').val())
                        }
                    });
                }
            });

            function DeleteResourceCentreLinks() {
            var currentSelectedIds = [];
            var articlesList = "";
            @foreach (var item in Model)
            {
                <text>
            currentSelectedIds = currentSelectedIds.concat.apply(currentSelectedIds, jQuery("#@item.Title.Replace(" ", "_")").jqGrid('getGridParam', 'selarrrow'));
            </text>
        }
            $.each(currentSelectedIds, function (index, value) {
                if (articlesList.length > 0) {
                    articlesList = articlesList + "," + value;
                }
                else {
                    articlesList = value;
                }
            });
            $.ajax('@Url.Action("DeleteResourceArticles","Apps")', {
                data: JSON.stringify({
                    articlesInfo: articlesList
                }),
                type: "post",
                contentType: 'application/json',
                dataType: 'json',
                success: function (data, textStatus, xhr) {
                    if (data.Success == "false") {
                        saveUnsuccessful();
                        $("#ErrorMessage").show();
                        $("#ErrorMessage").html(data.Error);
                        goToByScroll("ErrorMessage");
                    }
                    else {
                        saveSuccessful();
                        $("#ErrorMessage").hide();
                        clearSelection();
                        // isAllChecked = false;
                        // isSelectAll=false;
                        @foreach (var item in Model)
                        {
                        <text>
                        jQuery("#@item.Title.Replace(" ", "_")").trigger('reloadGrid');
                        </text>
                        }
                        goToByScroll("confirmationMessage");
                        $('#FormValidation')[0].reset();
                        $('#resourceId').val('0');
                        $('#resourceSaveChanges').val("Add new");
                    }

                }
            });
        }


            $("#myModal .btn-danger").click(function () {
                $("#myModal").modal("toggle");
            });

            $("#myModalDelete .btn-danger").click(function () {
                $("#myModalDelete").modal("toggle");
            });

            $(document).on('click', '.GenerateCommunityCode', function (e) {
                var tr = $(e.target).closest('tr');
                var bdxCommunityId = tr[0].id;
                var bdxBuilderId = parseInt($('#drpBuilder').val());
                var partnerID = parseInt($('#drpPartner').val());
                $.ajax({
                    url: '@Url.Action("GenerateBCCode")',
                    type: 'POST',
                    data: { bdxBuilderBrandId: parseInt($('#drpBuilder').val()), bdxCommunityId: bdxCommunityId, bdxBuilderBrandName: $('#drpBuilder option:selected').text(), partnerID : partnerID },
                    success: function (data) {
                        if (data == "Success") {
                            saveSuccessful("Code has been generated successfully!!");
                            $('#' + 'Communities').trigger('reloadGrid');
                        }
                    },
                    error: function (data) {
                        saveUnsuccessful("Error Generating BCCode");
                        console.log(data);
                    }
                });
            });

            $(document).on('click', '#generateAll', function (e) {
                var bdxBuilderId = parseInt($('#drpBuilder').val());
                var partnerID = parseInt($('#drpPartner').val());
                $('.loading-text').text('Generating! This may take some time.');
                $('.sa-loading-bar').css('display', 'block');
                $.ajax({
                    url: '@Url.Action("GenerateBCCodeForAllCommunities")',
                    type: 'POST',
                    data: { bdxBuilderBrandId: parseInt($('#drpBuilder').val()), bdxBuilderBrandName: $('#drpBuilder option:selected').text(), partnerID: partnerID },
                    success: function (data) {
                        $('.sa-loading-bar').css('display', 'none');
                        if (data == "Success") {
                            saveSuccessful("Codes have been generated successfully!!");
                            $('#' + 'Communities').trigger('reloadGrid');
                        }
                    },
                    error: function (data) {
                        $('.sa-loading-bar').css('display', 'none');
                        saveUnsuccessful("Error Generating BCCodes");
                        console.log(data);
                    }
                });
            });
            $(document).on('click', '#downloadAllPDF', function (e) {
                var currentSelectedIds = jQuery("#Communities").jqGrid('getGridParam', 'selarrrow');
                if (currentSelectedIds.length == 0) {
                    alert("Please select atleast one community.");
                } else {
                    var bdxBuilderId = parseInt($('#drpBuilder').val());
                    var partnerID = parseInt($('#drpPartner').val());
                    $('.loading-text').text('Generating! This may take some time.');
                    $('.sa-loading-bar').css('display', 'block');
                    location.href = '/NewHomeNavigator/DownloadPdf?bdxBuilderBrandId=' + parseInt($('#drpBuilder').val()) + '&bdxCommunityIds=' + currentSelectedIds + '&bdxBuilderBrandName=' + $('#drpBuilder option:selected').text() + '&partnerID=' + partnerID + '&builderQRCode=' + true;
                    var i = currentSelectedIds.length * 200;
                    setTimeout(function () {
                        $('.sa-loading-bar').css('display', 'none');
                    },i)
                   }
               });



            $('#drpBuilder').on('change', function () {
                //consumerAppConfiguration.getConfiguration($('#drpBuilder').val());
                $('#FormValidation').find('#BDXID').val($('#drpBuilder').val());
                $('#FormValidation').find('#Name').val($('#drpBuilder option:selected').text());
                $('#generateAll').removeClass('hide').addClass('show');
                $('#downloadAllPDF').removeClass('hide').addClass('show');
                $.ajax({
                    url: '@Url.Action("GetAppResourcesGrid")',
                    type: 'POST',
                    data: { builderBrandBDXID: parseInt($('#drpBuilder').val()) },
                    success: function (data) {
                        $('#resourceCentreGrids').html(data);
                    }
                });

                if ($('.tab-pane.active').attr('id') == "manageGenerateCommunity") {
                    $.ajax({
                        url: '@Url.Action("GetCommunitiesListGrid")',
                        type: 'POST',
                        data: { builderBrandBDXID: parseInt($('#drpBuilder').val()), partnerID: parseInt($('#drpPartner').val()) },
                        success: function (data) {
                            $('#communitiesGrid').html(data);
                        }
                    });
                }

                $.ajax({
                    url: '@Url.Action("GetCommunitiesByBuilder")',
                    type: 'POST',
                    data: { builderId: parseInt($('#drpBuilder').val()), partnerID: parseInt($('#drpPartner').val()) },
                    success: function (data) {
                        if (typeof (data) != "undefined" && data.length > 0) {
                            var html = '';
                            html += '<option value="">--Select Community Name--</option>';
                            for (var i = 0; i < data.length; i++) {
                                html += '<option value="' + data[i].BDXID + '">' + data[i].Name + '</option>';
                            }
                            $('#drpCommunity').empty();
                            $('#drpCommunity').append(html);
                        }
                    }
                });
            });
            $('#drpCommunity').on('change', function () {
                var communityID = parseInt($('#drpCommunity').val());
                $('.deleteImage').removeAttr('disabled');
                $('#uploaded-file-image').attr('src', '/NewHomeNavigator/GetBackgroundImage/' + communityID).css('display', 'block');
            });
            $("#upload-file-image").on('change',function (e) {
                var formdata = new FormData();
                var _image = e.target.files[0];
                formdata.append('file', _image);
                formdata.append('qqfile', e.target.files[0].name);
                if (e.target.files[0].type == 'image/png' || e.target.files[0].type == 'image/jpeg' || e.target.files[0].type == 'image/jpg') {
                    $.ajax({
                        type: "POST",
                        url: "/NewHomeNavigator/FileUpload?qqfile=" + e.target.files[0].name,
                        data: formdata,
                        async: false,
                        cache: false,
                        contentType: false,
                        processData: false,
                        success: function (result) {
                            result = JSON.parse(result);
                            if (result.success == true) {
                                $('#file_selected_text').text(result.fileName + ' ' + (result.size / 1048576).toFixed(2) + ' MB');
                                uploadedFilePath = result.path;
                            } else {
                                $('#file_selected_text').text("No Files Selected");
                                $("#upload-file-image").val('');
                                $('#uploadedFilePath').val('');
                                uploadedFilePath = '';
                            }
                        },
                        error: function (result) {
                            console.log(result);
                        }
                    });
                } else {
                    saveUnsuccessfulMessage("File Extension must be .jpeg or.png");
                }
            });

            $("#upload-file-image").on('click', function () {
                this.value = null;
                $('#file_selected_text').text("No Files Selected");
            });

            $(document).on("img",'error')
                .removeAttr("src");

        });

        function DeleteImages() {
            var communityID = parseInt($('#drpCommunity').val());
            $.ajax({
                type: "POST",
                url: "/NewHomeNavigator/RemoveImage",
                data: { communityID: communityID },
                success: function (result) {
                    saveSuccessful("Deleted Successfully");
                    $('#uploaded-file-image').removeAttr('src');
                },
                error: function (result) {
                    console.log(result);
                }
            });
        }

        function deleteSelected() {
            $("#ErrorMessage").hide();
            var currentSelectedIds = [];
            @foreach (var item in Model)
            {
            <text>
            currentSelectedIds = currentSelectedIds.concat.apply(currentSelectedIds, jQuery("#@item.Title.Replace(" ", "_")").jqGrid('getGridParam', 'selarrrow'));
            </text>
            }
            if (currentSelectedIds.length == 0) {
                $("#lnkDeleteProspect").attr("href", "#");
                saveUnsuccessfulMessage("Please select atricle(s) to delete");
                goToByScroll("ErrorMessage");
            }
            else {
                $("#lnkDeleteProspect").attr("href", "#myModalDelete");
            }
        }

        function HandleError(element) {
            $(element).removeAttr('src');
            $(element).css('display', 'none');
            $('.deleteImage').attr('disabled', 'disabled');
        }

        function saveBackgroundImage()
        {
            var builderId = $('#drpBuilder').val();
            var communityId = $('#drpCommunity').val();
            if (builderId == "") {
                alert("Please select Builder Name");
                return false;
            }
            if (communityId == "") {
                alert("Please select Community Name");
                return false;
            }
            //Upload Assets
            if (typeof(uploadedFilePath) != "undefined" &&  uploadedFilePath != "") {
                $.ajax({
                    type: "POST",
                    url: "/NewHomeNavigator/UploadBackgroundImage",
                    data: { bdxBuilderBrandId: parseInt(builderId), bdxCommunityId: parseInt(communityId), bdxBuilderBrandName: $('#drpBuilder option:selected').text(), value: uploadedFilePath },
                    success: function (result) {
                        if (result == "Success") {
                            saveSuccessfulMessage("Uploaded Successfully.");
                            var communityID = parseInt($('#drpCommunity').val());
                            $('.deleteImage').removeAttr('disabled');
                            $('#uploaded-file-image').attr('src', '/NewHomeNavigator/GetBackgroundImage?bdxCommunityID=' + communityID).css('display', 'block');
                            $('#upload-file-image').val('');
                            $('#file_selected_text').text('No Files Selected');
                            $('#uploadedFilePath').val('');
                            uploadedFilePath = '';
                        }
                    },
                    error: function (result) {
                        console.log(result);
                    }
                });
            } else {
                alert("Please upload an image!!");
            }
        }
    </script>
    <script>
        var consumerAppConfiguration = {
            saveConfiguration: function () {
                if (CKEDITOR.instances['IntroText'].getData().trim() == "" || CKEDITOR.instances['DidYouKnow'].getData().trim() == "") {
                    saveUnsuccessfulMessage("'Intro Text' and 'Did you know' field cannot be left blank!");
                } else {
                    $.post("@Url.Action("SaveConfigurableDetails","Apps")", { CommunityId: $('#drpCommunity').val(), BDXID: $('#drpBuilder').val(), Name: $('#drpBuilder option:selected').text(), DesignIntroText: CKEDITOR.instances['IntroText'].getData(), DesignDoYouKnow: CKEDITOR.instances['DidYouKnow'].getData(), PartnerId: 9679 }, function (data) {
                        saveSuccessful();
                    }).fail(function () {
                        saveUnsuccessful();
                    });
                }
            },
            getConfiguration: function (builderBDXId) {
                $.post("/Apps/GetDetailsByPartnerId?builderBDXId=" + builderBDXId, function (data) {
                    if (data != "Error") {
                        CKEDITOR.instances['IntroText'].setData(data.DesignIntroText);
                        CKEDITOR.instances['DidYouKnow'].setData(data.DesignDoYouKnow);
                    } else {
                        CKEDITOR.instances['IntroText'].setData('');
                        CKEDITOR.instances['DidYouKnow'].setData('');
                    }
                });
            },
            cancelConfiguration: function () {
                ResetForm();
            }
        };


        function ResetForm() {
            $('#drpCommunity').val("");
            CKEDITOR.instances['IntroText'].setData('');
            CKEDITOR.instances['DidYouKnow'].setData('');
        }

        function saveSuccessfulMessage(message) {
            resetSaveLabel();
            $("#confirmationMessage").addClass("sucessfully-alert");
            $("#confirmationMessage").text(message);
            $("#confirmationMessage").show();
            $("#confirmationMessage").fadeIn("1000").delay(2000).fadeOut('1500').hide(0);
        }
        function saveUnsuccessful() {
            resetSaveLabel();
            $("#confirmationMessage").addClass("unsucessfully-alert");
            $("#confirmationMessage").fadeIn("1000").delay(2000).fadeOut('1500').hide(0);
            $("#confirmationMessage").text("Save operation not completed");
            $("#confirmationMessage").show();
        }
        function saveUnsuccessfulMessage(message) {
            resetSaveLabel();
            $("#confirmationMessage").addClass("unsucessfully-alert");
            $("#confirmationMessage").fadeIn("1000").delay(2000).fadeOut('1500').hide(0);
            $("#confirmationMessage").text(message);
            $("#confirmationMessage").show();
        }

        function saveSuccessful(message) {
            resetSaveLabel();
            $("#confirmationMessage").addClass("sucessfully-alert");
            if (message == '' || typeof (message) == "undefined") {
                message = "Changes Saved."
            }
            $("#confirmationMessage").text(message);

            $("#confirmationMessage").show();
            $("#confirmationMessage").fadeIn("1000").delay(2000).fadeOut('1500').hide(0);
        }
        function resetSaveLabel() {
            $("#confirmationMessage").removeClass("sucessfully-alert");
            $("#confirmationMessage").removeClass("unsucessfully-alert");
            $("#confirmationMessage").text("");
        }
    </script>
    <script>
        $("#FormValidation").validate({
            onkeyup: function (element, event) {
                if (event == "keypress" && this.elementValue(element) === "") {
                    return;
                }
                else {
                    this.element(element);
                }
            },
            rules: {
                Title: {
                    required: true
                    //,
                    //error:"Resource title is required."
                },
                Url: {
                    required: true
                    //,
                    //error: "Resource URL is required."
                },
                ParentId: {
                    required: true
                    //,
                    //error: "Resource Section is required."
                }
            }, messages: {
                Title: "Resource title is required.",
                Url: "Resource URL is required.",
                ParentId: "Resource Section is required."
            }
        });
        var Configuration = {
            resourceConfiguration: ko.observableArray(),
            resourceHeadings: ko.observableArray()
        }
        var consumerAppResources = {
            saveAppResources: function () {
                if ($('#FormValidation').valid()) {
                    if ($("#parentId").val() == "Select Section") {
                        saveUnsuccessfulMessage("Please select Resource section!");
                        return false;
                    }
                    var expression = /[-a-zA-Z0-9@@:%_\+.~#?&//=]{2,256}\.[a-z]{2,4}\b(\/[-a-zA-Z0-9@@:%_\+.~#?&//=]*)?/gi;
                    var regex = new RegExp(expression);
                    var t = $("#resourceUrl").val();

                    if (t.match(regex)) {

                    } else {
                        saveUnsuccessfulMessage("Please provide a valid url!");
                        return false;
                    }
                    $.ajax({
                        url: "/Apps/UpdateResourceDetails",
                        type: 'POST',
                        data: $('#FormValidation').serializeArray(),
                        success: function () {

                            @foreach (var item in Model)
                        {
                            <text>
                            $('#' + '@item.Title.Replace(" ","_")').trigger('reloadGrid');
                            </text>
                        }
                            saveSuccessful();
                            $('#FormValidation')[0].reset();
                            $('#resourceId').val('0');
                            $('#resourceSaveChanges').val("Add new");
                        },
                        error: function () {
                            saveUnsuccessful();
                        }
                    })
                }
            },
            cancelAppResources: function () {
                $('#FormValidation')[0].reset();
                $('#resourceId').val('0')
                $('#resourceSaveChanges').val("Add new");
            },
            getAppResourcesGrid: function () {
                $.ajax({
                    url: '/NewHomeNavigator/GetAppResourcesGrid',
                    type: 'POST',
                    data: { builderBrandBDXID: $('#drpBuilder').val() },
                    success: function (data) {
                        console.log(data);
                        $('#resourceCentreGrids').html(data);
                    },
                    error: function () {
                        saveUnsuccessful();
                    }
                })
            }
        };

        function trim(a) {
            return a.replace(/\s/gi, "_");
        }
    </script>
    <script type="text/javascript">
        var viewResource = {};
        function load() {
            @foreach (var item in Model)
            {
            <text>
            var options = {
                update: function (e, ui) {
                    var IdsWithSequence = [];
                    var allRowsInGrid = $('#' + '@item.Title.Replace(" ","_")').jqGrid('getRowData');
                    if (typeof (allRowsInGrid) != "undefined") {
                        for (var i = 0; i < allRowsInGrid.length; i++) {
                            allRowsInGrid[i].Sequence = i + 1;
                        }
                        $.ajax({
                            url: '/Apps/SaveSequence',
                            type: 'POST',
                            data: { jsonStringConsumerAppResource: JSON.stringify(allRowsInGrid) },
                            success: function (data) {
                                saveSuccessful();
                            },
                            error: function () {
                                saveUnsuccessful();
                            }
                        })
                    }
                }
            }
            $('#' + '@item.Title.Replace(" ","_")').sortableRows(options);
            </text>
            }
        }

        function selectAllSelection() {
            if (idsToExclude.length > 0) {
                $('#cb_@PROSPECTS_GRID').prop('checked', false);
            } else if (idsToExclude.length == 0 && isSelectAll) {
                $('#cb_@PROSPECTS_GRID').prop('checked', true);
                idsToExclude = [];
            }
        }

        function onAllRowSelected(aRowids, status) {
            if (status) {
                for (i = 0; i < aRowids.length; i++) {
                    if (selectedIds.indexOf(aRowids[i]) < 0) {
                        selectedIds.push(aRowids[i]);
                        $('#jqg_Prospects_' + aRowids[i]).prop('checked', true);
                    }
                }
            }
            else {
                selectedIds = [];
                idsToExclude = [];
            }
        }

        function onRowSelected(rowid, status, grid) {
            if (status) {
                $('#resourceSaveChanges').val("Save changes");
                var res = {};
                res.ID = getColumnData("#" + $(grid).attr('id'), rowid, "ID");
                res.Title = getColumnData("#" + $(grid).attr('id'), rowid, "Title");
                res.URL = getColumnData("#" + $(grid).attr('id'), rowid, "URL");
                res.ParentId = getColumnData("#" + $(grid).attr('id'), rowid, "ParentId");
                $('#resourceTitle').val(res.Title);
                $('#resourceUrl').val(res.URL);
                $('#resourceId').val(res.ID);
                $('#parentId').val(res.ParentId);
            } else {
                var currentSelectedIds = [];
                var articlesList = "";
                @foreach (var item in Model)
                {
                    <text>
                currentSelectedIds = currentSelectedIds.concat.apply(currentSelectedIds, jQuery("#@item.Title.Replace(" ", "_")").jqGrid('getGridParam', 'selarrrow'));
                </text>
                }
                if (currentSelectedIds.length <= 0) {
                    $('#FormValidation')[0].reset();
                    $('#resourceId').val('0')
                    $('#resourceSaveChanges').val("Add new");
                } else {
                    var length = currentSelectedIds.length;
                    var id = currentSelectedIds[length-1];
                    grid = $("#"+id).parents('table').attr('id');
                    var res = {};
                    res.ID = getColumnData("#" + grid, id, "ID");
                    res.Title = getColumnData("#" + grid, id, "Title");
                    res.URL = getColumnData("#" + grid, id, "URL");
                    res.ParentId = getColumnData("#" + grid, id, "ParentId");
                    $('#resourceTitle').val(res.Title);
                    $('#resourceUrl').val(res.URL);
                    $('#resourceId').val(res.ID);
                    $('#parentId').val(res.ParentId);
                }
            }

        }

        function clearSelection() {
            isSelectAll = false;
            idsToExclude = [];
            selectedIds = [];
            loadClick = false;
            $("#ErrorMessage").hide();
        }
        function BindControls(rowId) {
            $("#ErrorMessage").hide();
        }
        function onPaging() {

            clearExcludeIds();
        }
        function onSort() {

            clearExcludeIds();
        }
        function clearExcludeIds() {
            var isChecked = $('#cb_@PROSPECTS_GRID').is(":checked");
            if (isSelectAll && isChecked) {
                idsToExclude = [];

            }

        }
    </script>
}

