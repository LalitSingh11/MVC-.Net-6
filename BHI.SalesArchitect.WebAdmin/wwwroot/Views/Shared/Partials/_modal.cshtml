@model BHI.SalesArchitect.WebAdmin.Models.ProspectLead
<style>
    .validation-summary-errors {
        color: #b94a48;
        background-color: #f2dede;
        border-color: #eed3d7;
        text-shadow: 0 1px 0 rgba(255, 255, 255, .2);
        -webkit-box-shadow: inset 0 1px 0 rgba(255, 255, 255, .25), 0 1px 2px rgba(0, 0, 0, .05);
        box-shadow: inset 0 1px 0 rgba(255, 255, 255, .25), 0 1px 2px rgba(0, 0, 0, .05);
        padding: 8px 35px 8px 14px;
        margin-bottom: 20px;
        text-shadow: 0 1px 0 rgba(255, 255, 255, 0.5);
        -webkit-border-radius: 4px;
        -moz-border-radius: 4px;
        border-radius: 4px;
    }
    .custom-alert-card-wrapper {
        background: rgba(0,0,0,0.5);
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 99999;
        display:none;
    }

    .custom-alert-card {
        width: 300px;
        padding: 30px;
        position: relative;
        border-radius: 4px;
        text-align: center;
        background: #fafafa;
        border: 1px solid #ccc;
        letter-spacing: 0.5px;
    }

    .custom-alert-card__title {
        font-size: 30px;
        margin-top: 0;
        margin-bottom: 15px;
    }

    .custom-alert-card__desc {
        font-size: 18px;
        margin: 0 0 20px;
    }

    .custom-alert-card__btn {
        display: inline-block;
        font-weight: 400;
        text-align: center;
        white-space: nowrap;
        vertical-align: middle;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
        border: 1px solid transparent;
        padding: .375rem .75rem;
        font-size: 1rem;
        line-height: 1.5;
        border-radius: .25rem;
        min-width: 100px;
        font-size: 16px;
        cursor: pointer;
        background: #3d688b;
        color:white;
    }
</style>

<div class="custom-alert-card-wrapper" id="background">
<div class="custom-alert-card" id="myResponseModal">
    <h2 class="custom-alert-card__title">Thank You!</h2>
    <p class="custom-alert-card__desc">Your request has been submitted.</p>
    <button class="custom-alert-card__btn" id="close">Okay</button>
</div>
</div>

<div id="myModal" class="modal fade hide" role="dialog">
    <div class="modal-dialog" >

        <!-- Modal content-->
        @using (Html.BeginForm("Index", "SiteOverview", FormMethod.Post, new { @id = "requestForm", @class = "form-horizontal" }))
        {
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close close-rt close-ri-modal" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Request Info</h4>

                </div>
                <div class="modal-body">
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary()
                    <div>
                        <div class="control-group">
                            <label class="control-label">First Name</label>
                            <div class="controls">
                                @Html.TextBoxFor(x => x.FirstName, new { @placeholder = "* First Name" })
                            </div>
                        </div>
                        <div class="control-group">
                            <label class="control-label">Last Name</label>
                            <div class="controls">
                                @Html.TextBoxFor(x => x.LastName, new { @placeholder = "* Last Name" })
                            </div>
                        </div>
                        <div class="control-group">
                            <label class="control-label">Email Address</label>
                            <div class="controls">
                                @Html.TextBoxFor(x => x.EmailAddress, new { @placeholder = "* Email Address" })
                            </div>
                        </div>
                        <div class="control-group">
                            <label class="control-label">Phone Number</label>
                            <div class="controls">
                                @Html.TextBoxFor(x => x.PhoneNumber, new { @placeholder = "Phone Number" })
                            </div>
                        </div>
                        <div class="control-group">

                            <label class="control-label">Zip Code</label>
                            <div class="controls">
                                @Html.TextBoxFor(x => x.ZipCode, new { @placeholder = "* Zip Code" })
                            </div>
                        </div>
                        <div class="control-group">
                            <label class="control-label">Comments</label>
                            <div class="controls">
                                @Html.TextAreaFor(x => x.Comments, new { rows = "3", placeholder = "Comments" })
                                @Html.HiddenFor(x => x.CommunityID)
                                @Html.HiddenFor(x => x.partnerID)
                                @Html.HiddenFor(x => x.IsZipCodeRequired)
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary" data-loading-text="Submitting..." style="outline:none;">Submit</button>
                    <button type="button" class="btn btn-default close-ri-modal" data-dismiss="modal" style="outline:none;">Close</button>
                </div>
            </div>
        }
    </div>
</div>
<script>

    var close = document.getElementById("close");
    var background = document.getElementById("background");

    function showSuccessModel() {
        background.style.display = "flex";
    }

    close.onclick = function () {
        background.style.display = "none";
    }

    var ajaxCallStatus = {
        Accepted: 1,
        Error: 2
    }
    $('#requestForm').on('submit', function (e) {
        e.preventDefault();
        if ($('#requestForm').valid()) {
            var formValues = $('form').serializeArray();
            $('.btn.btn-primary').button('loading');
            $('.validation-summary-errors').find('li').css('display', 'none');
            $('.validation-summary-errors').addClass('validation-summary-valid').removeClass('validation-summary-errors');
            var siteId = getParameterByName('siteID');
            let lotids = sessionStorage.getItem(siteId);
            if (lotids != null && lotids.trim() != "") {
                for (var i = 0; i < formValues.length; i++) {
                    if (formValues[i].name == "Comments") {
                        formValues[i].value = formValues[i].value + "\nLotids: " + lotids;
                    }
                }
            }
            var platformType = {};
            platformType.name = 'Platform';
            platformType.value = JSON.stringify(5);
            formValues.push(platformType);
            $.ajax({
                url: '@Url.Action("AddProspect","Prospects")',
                type: 'post',
                data: formValues,
                success: function (data) {
                    if (typeof (data) != "undefined" && typeof (data.ajaxCallStatus) != "undefined" && data.ajaxCallStatus == ajaxCallStatus.Error) {
                        if ($('.zipCodeError').length == 0 && $('.validation-summary-valid ul').length > 0) {
                            $('.validation-summary-valid ul').append('<li class="zipCodeError">The Zip Code field is required.</li>');
                            $('.validation-summary-valid').addClass('validation-summary-errors').removeClass('validation-summary-valid');
                        }
                        else {
                            $('.validation-summary-valid ul').append('<li class="zipCodeError">The Zip Code field is required.</li>');
                        }
                    } else {
                        $('#myModal').modal('toggle');
                        document.getElementById('requestForm').reset();
                        showSuccessModel();
                        switch (requestInfoSource) {
                            case "Right": logGAEvent("Request-Info-right", "ISP", "form-submit_r");
                                break;
                            case "Bottom": logGAEvent("Request-Info-bottom", "ISP", "form-submit");
                                break;
                            case "Lot": logGAEvent("Request-Info-lot", "ISP", "form-submit_l");
                                break;
                        }
                    }
                    $('.btn.btn-primary').button('reset');
                },
                error: function (data) {
                    saveUnsuccessful();
                    $('.btn.btn-primary').button('reset');
                }
            })
        }
    });
    $('#myModal').on('hidden.bs.modal', function () {
        $('.validation-summary-errors').addClass('validation-summary-valid').removeClass('validation-summary-errors').find('li').remove();
        document.getElementById('requestForm').reset();
        $('.btn.btn-primary').button('reset');
    });

    $(".close-ri-modal").on('click', function () {
        switch (requestInfoSource) {
            case "Right": logGAEvent("Request-Info-right", "ISP", " Request-info-popup-close_r");
                break;
            case "Bottom": logGAEvent("Request-Info-bottom", "ISP", "Request-info-popup-close");
                break;
            case "Lot": logGAEvent("Request-Info-lot", "ISP", "Request-info-popup-close_l");
                break;
        }
    });

</script>
