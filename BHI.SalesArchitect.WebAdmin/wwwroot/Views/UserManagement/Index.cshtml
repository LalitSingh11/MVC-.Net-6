@using BHI.SalesArchitect.WebAdmin.Lib.Extensions
@using System.Web.Optimization;
@using MvcJqGrid
@{
    ViewBag.Title = "User Management";
    var GRID = "Grid";
    var GRID_COMM = "GridComm";
    var FORM = "#FormValidation";
}
@*<link href="../../Content/main.css" rel="stylesheet" type="text/css" />*@
@section header {
    @Scripts.Render("~/bundles/jquery-2.0.2")
    @Scripts.Render("~/bundles/jqueryui-1.10.3")
    @Scripts.Render("~/bundles/jqGrid")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/generalHelper")
    @Scripts.Render("~/bundles/knockout")
    @Scripts.Render("~/bundles/generalHelperKO")
    @Styles.Render("~/Content/themes/base/css")
    @Styles.Render("~/Content/jqGrid")
    @Scripts.Render("~/bundles/bootstrap")

}
<section>

    <script type="text/javascript" src="../../Scripts/validate_additional.js"></script>
    <div class="row">
        <div class="span6 section-heading" id="HeaderDiv">
            <h1>Manage @ViewData["PartnerName"]  Users</h1>
        </div>
        <div class="span6">
            <div class="page-header-btn-group btn-group pull-right">
                @Html.Action("ManageMenu", "Apps")
            </div>

        </div>

    </div>
    @if (!Roles.IsUserInRole("PARTNERREADONLY"))
    {
    <div class="page-header-btn-group pull-right">
        <a class="delete-selected" href="Javascript:void(0);" onclick="deleteSelected();">Delete Selected</a>
        <button class="btn btn-success" onclick="location.href= '/UserManagement/CreateUser'"><i class="icon-plus icon-white"></i> New User</button>
    </div>
    }
    <div class="alert alert-error" id="ErrorMessage" style="display:none">   </div>
    <div class="row">
        <div class="span12 table-fixed-head-container">

            @(Html.Grid(GRID)
            .AddColumn(new Column("ID").SetHidden(true))
            .AddColumn(new Column("UserName").SetAlign(MvcJqGrid.Enums.Align.Center).SetWidth(100).SetLabel("User"))
            .AddColumn(new Column("FirstName").SetAlign(MvcJqGrid.Enums.Align.Center).SetLabel("First Name"))
            .AddColumn(new Column("LastName").SetAlign(MvcJqGrid.Enums.Align.Center).SetLabel("Last Name"))
            .AddColumn(new Column("Phone Number").SetHidden(true))
            .AddColumn(new Column("Email").SetAlign(MvcJqGrid.Enums.Align.Center))
            .AddColumn(new Column("Communities").SetHidden(true))
            .AddColumn(new Column("Role").SetHidden(true))
            .AddColumn(new Column("ActivityStateName").SetAlign(MvcJqGrid.Enums.Align.Center).SetLabel("Status"))
            .AddColumn(new Column("Is Active").SetHidden(true))
            .SetUrl(Url.Action("GetUsers"))
            .SetRequestType(MvcJqGrid.Enums.RequestType.Post)
            .SetAutoWidth(true)
            .SetSortName("UserName")
            .SetSortOrder(MvcJqGrid.Enums.SortOrder.Asc)
            .SetRowNum(10000)
            .SetMultiSelect(true)
            .SetMultiBoxOnly(true)
            .SetViewRecords(true)
            .OnSelectRow("onRowSelected(rowid, status)"))

        </div><!-- .table-fixed-head-container -->
    </div><!-- .row -->

    <div class="row">
        <form id="FormValidation" action="javascript:void(0);">
            <div class="span12">
                <div class="user-select">

                    <h4><span id="userName" data-bind="text: UserName"></span></h4>
                    <fieldset id="FieldSet2Bind">
                        <legend>User Information</legend>
                        <div class="row-fluid">
                            <div class="span6">
                                <div class="control-group">
                                    <label class="control-label">First Name</label>
                                    <div class="controls">
                                        <input class="input-block-level" type="text" id="userFirstName" name="firstName" placeholder="First Name" data-bind="value: FirstName" />
                                    </div>
                                </div>
                                <div class="control-group">
                                    <label class="control-label">Last Name</label>
                                    <div class="controls">
                                        <input class="input-block-level" type="text" id="userLastName" name="lastName" placeholder="LastName" data-bind="value: LastName" />
                                    </div>
                                </div>
                                <div class="control-group">
                                    <label class="control-label">Username</label>
                                    <div class="controls">
                                        <input class="input-block-level" type="text" id="userUserName" name="userName" placeholder="Username" data-bind="value: UserName" />
                                    </div>
                                </div>
                                <div class="control-group">
                                    <label class="control-label">Phone Number</label>
                                    <div class="controls">
                                        <input class="input-block-level" type="text" id="userPhoneNumber" name="phoneNumber" placeholder="Phone Number" data-bind="value: PhoneNumber" />
                                    </div>
                                </div>
                                @if (!Roles.IsUserInRole("PARTNERREADONLY") && !Roles.IsUserInRole("LOTSTATUSEDITOR"))
                                {
                                <div class="control-group">
                                    <div class="btn-group" data-toggle="buttons-radio">
                                        <!-- Check this implementation http://www.ewal.net/2012/10/17/bootstrap-knockout-toggle-button-bindings/ -->
                                        <button data-value="3" data-bind="css: CssSales, click: function() { $root.IsAdministrator('3') }" class="btn btn-small assignRole" id="salesRepButton">Sales Representative</button>
                                        <button data-value="2" data-bind="css:  CssAdministrator, click: function() { $root.IsAdministrator('2') }" class="btn btn-small assignRole" id="communityAdminButton">Community Administrator</button>
                                        <button data-value="5" data-bind="css: lotStatusEditor, click: function() { $root.IsAdministrator('5') }" class="btn btn-small assignRole" id="lotStatusEditorButton">Lot Status Editor</button>
                                    </div>
                                </div>
                                }
                            </div>
                            <div class="span6">
                                <div class="control-group">
                                    <label class="control-label">Email</label>
                                    <div class="controls">
                                        <input class="input-block-level" type="text" id="userEmail" name="email" placeholder="Email" data-bind="value: Email" />
                                    </div>
                                </div>

                                <div class="control-group">
                                    @if (!Roles.IsUserInRole("PARTNERREADONLY"))
                                    {
                                    <label class="control-label">Status</label>
                                    <div class="control-lots">
                                        @*<input type="checkbox" id="userActive" class="userActive" data-bind="value: Status" />Is Active*@
                                        <input type="checkbox" id="userActive" class="userActive" data-bind="value:IsActive" />Is Active
                                    </div>
                                    }
                                    else
                                    {
                                    <div class="control-lots" style="display:none;">
                                        <input type="checkbox" id="userActive1" class="userActive" />Is Active
                                    </div>
                                    }
                                </div>

                            </div>
                        </div>
                    </fieldset>
                    @if (!Roles.IsUserInRole("PARTNERREADONLY"))
                    {
                    <fieldset>
                        <legend>Communities Per User</legend>
                        @(Html.Grid(GRID_COMM)
                        .AddColumn(new Column("ID").SetHidden(true))
                        .AddColumn(new Column("Community").SetSortable(false).SetAlign(MvcJqGrid.Enums.Align.Center))
                        .SetRequestType(MvcJqGrid.Enums.RequestType.Post)
                        .SetAutoWidth(true)
                        .SetUrl(Url.Action("GetCommunities"))
                        .SetRowNum(10000)
                        .SetViewRecords(true)
                        .SetMultiSelect(true)
                        .OnSelectAll("selectAllComm(status)")
                        .OnSelectRow("onRowCommSelected(rowid, status)"))
                    </fieldset>
                    }
                    <fieldset class="form-horizontal" id="FieldSet2Bind2">
                        <legend>Reset Password</legend>
                        <div class="control-group">
                            <label class="control-label">New Password:</label>
                            <div class="controls">
                                <input type="password" id="userRetypePassword" data-bind="value: Password">
                            </div>
                        </div>
                        <div class="control-group">
                            <label class="control-label" for="inputRetypePassword">Re-type Password:</label>
                            <div class="controls">
                                <input type="password" id="userPassword" name="password" data-bind="value: ConfirmPassword" onfocus="$(" @FORM ").validate(); ">
                            </div>
                        </div>
                    </fieldset>

                    <div class="form-actions">
                        <button type="button" class="btn btn-primary " onclick="SaveUser();">Save changes</button>
                        <button type="button" class="btn" onclick="reloadUser();">Cancel</button>
                        @if (!Roles.IsUserInRole("PARTNERREADONLY"))
                        {
                        <button type="button" class="btn pull-right" style="display:none;"><i class="icon-envelope"></i> Send login details to user</button>
                        }
                    </div>
                </div>

            </div>

        </form>
    </div>

    <!--   <div>
        Testing <div id="test46" data-bind="text: ko.toJSON($root)"> </div>

       </div> -->
</section>
<script type="text/javascript">
    var viewUser = {};
    currentRowId = -1;
    var selectedIds = "";
    $(document).ready(function () {
        $('#salesRepButton , #communityAdminButton,#lotStatusEditorButton').attr('disabled', true);
        $("@FORM").validate({
            onkeyup: function (element, event) {
                if (event == "keypress" && this.elementValue(element) === "") {
                    return;
                }
                else {
                    this.element(element);
                }
            },
            rules: {
                firstName: {
                    required: true
                },
                lastName: {
                    required: true
                },
                userName: {
                    required: true
                },
                phoneNumber: {
                    phoneUS: true
                },
                email:
                {
                    required: true,
                    email: true
                },
                password:
                {
                    equalTo: "#userRetypePassword"
                }
            }
        });

    });
    function onRowSelected(rowid, status) {
        if (currentRowId != rowid) {
            currentRowId = rowid;
            $(".input-block-level").next("span").remove();
            $('#salesRepButton , #communityAdminButton, #lotStatusEditorButton').attr('disabled', false);
            BindControls(rowid);
        }
        else if (status == false) {
            $('#salesRepButton , #communityAdminButton, #lotStatusEditorButton').attr('disabled', true);
            UnBindControls(rowid);
            $(".input-block-level").next("span").remove();
            currentRowId = -1;
        }
    }

    //    function EmailUserLoginDetails() {
    //        if (currentRowId != -1) {
    //            if ($("@FORM").valid()) {
    //                $.ajax('@Url.Action("EmailUserLoginDetails")', {
    //                    data: "{ model: " + ko.toJSON(viewUser) + ", userId: " + getColumnData("#@(GRID)", currentRowId, "ID") + "}",
    //                    type: "post",
    //                    contentType: 'application/json',
    //                    dataType: 'json',
    //                    success: function (data, textStatus, xhr) {
    //                        if (data.Success == "true") {
    //                            $("#ErrorMessage").hide();
    //                            sentSuccessful();
    //                            jQuery("#@(GRID)").trigger('reloadGrid');
    //                            $("#@(GRID_COMM)").jqGrid('resetSelection');
    //                            currentRowId = -1;
    //                            cleanModel();
    //                            goToByScroll("confirmationMessage");
    //                        }
    //                    }
    //                });
    //            }
    //        }
    //    }

    function SaveUser() {
        if (currentRowId != -1) {
            var phoneNumber = $("#userPhoneNumber").val();
            if ($("@FORM").valid()) {
                if ($(".userActive").prop("checked")) {
                    viewUser.IsActive = "true";
                }
                else {
                    viewUser.IsActive = "false";
                }


                phoneNumber = phoneNumber.replace(/\s+/g, "");
                $("#userPhoneNumber").val(phoneNumber);
                viewUser.PhoneNumber = phoneNumber;
                $.ajax('@Url.Action("UpdateUser")', {
                    data: "{ model: " + ko.toJSON(viewUser) + ", userId: " + getColumnData("#@(GRID)", currentRowId, "ID") + "}",
                    type: "post",
                    contentType: 'application/json',
                    dataType: 'json',
                    success: function (data, textStatus, xhr) {
                        if (data.Success == "false") {
                            saveUnsuccessful();
                            $("#ErrorMessage").show();
                            $("#ErrorMessage").html(data.Error);
                            //   goToByScroll("ErrorMessage");
                        }
                        else {

                            $("#ErrorMessage").hide();
                            saveSuccessful();
                            $('#salesRepButton , #communityAdminButton,#lotStatusEditorButton').attr('disabled', true);
                            jQuery("#@(GRID)").trigger('reloadGrid');
                            $("#@(GRID_COMM)").jqGrid('resetSelection');
                            currentRowId = -1;
                            cleanModel();
                            goToByScroll("confirmationMessage");
                        }

                    }
                });
            }
        }
    }
    function BindControls(rowId) {
        $("#ErrorMessage").hide();
        viewUser.UserName = getColumnData("#@(GRID)", rowId, "UserName");
        viewUser.FirstName = getColumnData("#@(GRID)", rowId, "FirstName");
        viewUser.LastName = getColumnData("#@(GRID)", rowId, "LastName");
        viewUser.PhoneNumber = getColumnData("#@(GRID)", rowId, "Phone Number");
        viewUser.Email = getColumnData("#@(GRID)", rowId, "Email");
        viewUser.IsAdministrator = ko.observable(getColumnData("#@(GRID)", rowId, "Role"));
        viewUser.AssociationIds = getColumnData("#@(GRID)", rowId, "Communities");
        viewUser.IsActive = getColumnData("#@(GRID)", rowId, "Is Active");

        viewUser.Password = "";
        viewUser.ConfirmPassword = "";
        if (viewUser.IsAdministrator() == "2") {
            viewUser.CssAdministrator = "active";
            viewUser.CssSales = "";
            viewUser.lotStatusEditor = "";
        }
        else if (viewUser.IsAdministrator() == "3") {
            viewUser.CssAdministrator = "";
            viewUser.CssSales = "active";
            viewUser.lotStatusEditor = "";
        }
        else if (viewUser.IsAdministrator() == "5") {
            viewUser.CssAdministrator = "";
            viewUser.CssSales = "";
            viewUser.lotStatusEditor = "active";
        }

        if (viewUser.IsActive == "true") {
            $(".userActive").prop("checked", true);
        }
        else {
            $(".userActive").prop("checked", false);
        }

        ko.cleanNode($("#FieldSet2Bind")[0]);
        ko.applyBindings(viewUser, $("#FieldSet2Bind")[0]);
        ko.cleanNode($("#FieldSet2Bind2")[0]);
        ko.applyBindings(viewUser, $("#FieldSet2Bind2")[0]);
        $("#@(GRID_COMM)").jqGrid('resetSelection');
        selectedIds = viewUser.AssociationIds.split(",");
        for (i = 0, count = selectedIds.length; i < count; i++) {
            if (selectedIds[i] != "") {
                $("#@GRID_COMM").jqGrid('setSelection', selectedIds[i], true);
            }
        }

        //ko.applyBindings(viewUser, $("#test46")[0]);
    }

    function UnBindControls(rowId) {
        $("#ErrorMessage").hide();
        viewUser.UserName = getColumnData("#@(GRID)", rowId, "");
        viewUser.FirstName = getColumnData("#@(GRID)", rowId, "");
        viewUser.LastName = getColumnData("#@(GRID)", rowId, "");
        viewUser.PhoneNumber = getColumnData("#@(GRID)", rowId, "");
        viewUser.Email = getColumnData("#@(GRID)", rowId, "");
        viewUser.IsAdministrator = getColumnData("#@(GRID)", rowId, "");
        viewUser.AssociationIds = getColumnData("#@(GRID)", rowId, "");
        viewUser.CssAdministrator = "";
        viewUser.CssSales = "";
        viewUser.lotStatusEditor = "";
        $(".userActive").prop("checked", false);
        viewUser.Password = "";
        viewUser.ConfirmPassword = "";
        ko.cleanNode($("#FieldSet2Bind")[0]);
        ko.applyBindings(viewUser, $("#FieldSet2Bind")[0]);
        ko.cleanNode($("#FieldSet2Bind2")[0]);
        ko.applyBindings(viewUser, $("#FieldSet2Bind2")[0]);
        $("#@(GRID_COMM)").jqGrid('resetSelection');
    }

    function reloadUser() {
        if (currentRowId != -1) {
            BindControls(currentRowId);
            goToByScroll("HeaderDiv");
        }
    }
    function onRowCommSelected(rowid, status) {
        var index = $.inArray(rowid, selectedIds);
        if (!status && index >= 0) {
            selectedIds.splice(index, 1); // remove id from the list
        } else if (index < 0) {
            selectedIds.push(rowid);
        }
        viewUser.AssociationIds = selectedIds.toString();
    }

    function selectAllComm(status) {
        if (status) {
            var s = jQuery("#@GRID_COMM").jqGrid('getGridParam', 'selarrrow');
            selectedIds = s;
        }
        else {
            selectedIds = [];
        }
        viewUser.AssociationIds = selectedIds.toString();
    }
    function deleteSelected() {
        $("#ErrorMessage").hide();
        var selectedIds = jQuery("#@GRID").jqGrid('getGridParam', 'selarrrow');
        if (selectedIds.length == 0) {
            $("#ErrorMessage").show();
            $("#ErrorMessage").html("Please select user(s) to delete");
            //goToByScroll("ErrorMessage");
            $("#@(GRID_COMM)").jqGrid('resetSelection');
            currentRowId = -1;
            cleanModel();
            //  goToByScroll("HeaderDiv");
        }
        else {
            $.ajax('@Url.Action("DeleteUsers")', {
                data: JSON.stringify({
                    usersId: selectedIds
                }),
                type: "post",
                contentType: 'application/json',
                dataType: 'json',
                success: function (data, textStatus, xhr) {
                    if (data.Success == "false") {
                        saveUnsuccessful();
                        $("#ErrorMessage").show();
                        $("#ErrorMessage").html(data.Error);
                        goToByScroll("ErrorMessage");
                    }
                    else {
                        saveSuccessful();
                        $("#ErrorMessage").hide();
                        jQuery("#@(GRID)").trigger('reloadGrid');
                        $("#@(GRID_COMM)").jqGrid('resetSelection');
                        currentRowId = -1;
                        cleanModel();
                        goToByScroll("confirmationMessage");
                    }

                }
            });
        }
    }

    function cleanModel() {
        viewUser = {};
        viewUser.UserName = "";
        viewUser.FirstName = "";
        viewUser.LastName = "";
        viewUser.PhoneNumber = "";
        viewUser.IsAdministrator = ko.observable("");
        viewUser.Email = "";
        viewUser.AssociationIds = "";
        viewUser.Password = "";
        viewUser.ConfirmPassword = "";
        viewUser.CssAdministrator = "";
        $(".userActive").prop("checked", false);
        viewUser.CssSales = "";
        viewUser.lotStatusEditor = "";
        $(".assignRole").removeClass("active");
        viewUser.IsActive = ko.observable("");
        ko.cleanNode($("#FieldSet2Bind")[0]);
        ko.applyBindings(viewUser, $("#FieldSet2Bind")[0]);
        ko.cleanNode($("#FieldSet2Bind2")[0]);
        ko.applyBindings(viewUser, $("#FieldSet2Bind2")[0]);
    }
    /* GUI FUNCTION */
    function resetSaveLabel() {
        $("#confirmationMessage").removeClass("sucessfully-alert");
        $("#confirmationMessage").removeClass("unsucessfully-alert");
        $("#confirmationMessage").text("");
    }
    function saveSuccessful() {
        resetSaveLabel();
        $("#confirmationMessage").addClass("sucessfully-alert");
        $("#confirmationMessage").text("Changes saved");
        $("#confirmationMessage").show();
        $("#confirmationMessage").fadeIn("1000").delay(2000).fadeOut('1500').hide(0);
    }
    function saveUnsuccessful() {
        resetSaveLabel();
        $("#confirmationMessage").addClass("unsucessfully-alert");
        $("#confirmationMessage").fadeIn("1000").delay(2000).fadeOut('1500').hide(0);
        $("#confirmationMessage").text("Save operation not completed");
        $("#confirmationMessage").show();
    }
    function sentSuccessful() {
        resetSaveLabel();
        $("#confirmationMessage").addClass("sucessfully-alert");
        $("#confirmationMessage").text("Login details sent successfully");
        $("#confirmationMessage").show();
        $("#confirmationMessage").fadeIn("1000").delay(2000).fadeOut('1500').hide(0);
    }
</script>
