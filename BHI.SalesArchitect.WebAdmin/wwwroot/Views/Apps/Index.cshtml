@using MvcJqGrid
@using MvcJqGrid.Enums
@using System.Web.Optimization;
@model IEnumerable<BHI.SalesArchitect.Model.ConsumerAppResource>
@{
    ViewBag.Title = "Apps";
}
@{
    var PROSPECTS_GRID = "Apps";
}
@section header {
    @Scripts.Render("~/bundles/jquery-2.0.2")
    @Scripts.Render("~/bundles/jqueryui-1.10.3")
    @Scripts.Render("~/bundles/jqGrid")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/knockout")
    @Scripts.Render("~/bundles/generalHelper")
    @Scripts.Render("~/bundles/bootstrap")
    @Styles.Render("~/Content/themes/base/css")
    @Styles.Render("~/Content/jqGrid")
}
<style type="text/css">
    .s-ico {
        display: none !important;
    }

    input[disabled], select[disabled], textarea[disabled], input[readonly], select[readonly], textarea[readonly] {
        background-color: #fff;
        cursor: text;
    }

    .ui-datepicker .ui-datepicker-title select {
        height: 20px;
        padding: 0px;
    }

    .filter-row {
        margin-bottom: 10px !important;
    }

    .date-error input[type="text"] {
        margin-bottom: 0 !important;
    }

    .date-error span {
        color: Red;
        display: none;
    }

    #botttom-nav ul {
        list-style: none;
        margin-left: -5px;
        padding-bottom: 15px;
        margin-top: 16px;
    }

        #botttom-nav ul li {
            float: left;
            padding: 0px 5px;
            border-right: 1px solid #000;
            font-size: 12px;
            line-height: 14px;
        }

            #botttom-nav ul li:last-child {
                border-right: none;
            }

    .prspcttbl tbody > tr td:first-child {
        text-align: right;
        float: right;
        min-width: 144px;
    }

    .prspcttbl tbody > tr td {
        padding: 0px 1px 1px 12px;
    }

    .row-fluid {
        display: flex;
        /*padding: 0px 0px 10px 10px;*/
    }

    .head-div {
        width: 20%;
    }

    .radio-div {
        width: 80%;
        float: left;
        margin: 7px 0px 0px 0px;
    }

        .radio-div > input[type="radio"] {
            margin-left: 14px;
        }

    .head-div h5 {
        font-size: 12px;
    }

    .ui-sortable > tr > td {
        cursor: pointer;
    }
</style>

<section>
    <div class="row">
        <div class="span6 section-heading">
            <h1>@ViewData["PartnerName"]</h1>
        </div>
        <div class="span6">
            <div class="page-header-btn-group btn-group pull-right">
                @Html.Action("ManageMenu", "Apps")
            </div>
        </div>
    </div>

    <div class="alert alert-error" id="ErrorMessage" style="display:none">
    </div>

    <ul id="optionsSelectTabs" class="nav nav-tabs">
        <li class="active"><a id="DesignTab" href="#manageDesignStudio" data-toggle="tab">Design Studio</a></li>
        <li><a class="tabChange" id="LotsTab" href="#manageResourceCentre" data-toggle="tab">Resource Center</a></li>
        @if (Roles.IsUserInRole("BHIADMIN") || Roles.IsUserInRole("PARTNERSUPERADMIN"))
        {
            <li><a class="tabChange" id="ConfigurationTab" href="#configuration" data-toggle="tab">App Configuration</a></li>
        }
    </ul>
    <div class="tab-content">
        @*style="padding:0px 13px 50px 4px;"*@
        <div class="tab-pane active" id="manageDesignStudio">
            @Html.Partial("Partials/_designStudio")
        </div>
        <div class="tab-pane" id="manageResourceCentre" data-bind="template: { name: 'resourceConfigurationTemplate', foreach: Configuration.resourceHeadings }">
            @Html.Partial("Partials/_resourceCentre", Model)
        </div>
        @if (Roles.IsUserInRole("BHIADMIN") || Roles.IsUserInRole("PARTNERSUPERADMIN"))
        {
            <div class="tab-pane" id="configuration" style="overflow: hidden;">
                <div>
                    <label style="font-size: 12px;">
                        Select qualification fields to display on new Guest Registration entries.<br /> <strong>Important:</strong> This configuration will affect all communities.
                    </label>
                </div>
                <div class="row-fluid">
                    <div class="head-div">
                        <h5>First Name</h5>
                    </div>
                    <div class="radio-div">
                        <input type="radio" name="fstname" value="true" checked="checked" disabled="disabled" /><span>Yes</span>
                        <input type="radio" name="fstname" disabled="disabled" value="false" /><span>No</span>
                    </div>
                </div>
                <div class="row-fluid">
                    <div class="head-div">
                        <h5>Last Name</h5>
                    </div>
                    <div class="radio-div">
                        <input type="radio" name="lstname" value="true" checked="checked" disabled="disabled" /><span>Yes</span>
                        <input type="radio" name="lstname" disabled="disabled" value="false" /><span>No</span>
                    </div>
                </div>
                <div class="row-fluid">
                    <div class="head-div">
                        <h5>Email Address</h5>

                    </div>
                    <div class="radio-div">
                        <input type="radio" name="emailaddress" value="true" checked="checked" disabled="disabled" /><span>Yes</span>
                        <input type="radio" name="emailaddress" disabled="disabled" value="false" /><span>No</span>
                    </div>
                </div>
                <div class="row-fluid">
                    <div class="head-div">
                        <h5>Phone</h5>

                    </div>
                    <div class="radio-div">
                        <input type="radio" name="Phone" value="true" data-bind="checked:Phone" /><span>Yes</span>
                        <input type="radio" name="Phone" value="false" data-bind="checked:Phone" /><span>No</span>
                    </div>
                </div>
                <div class="row-fluid">
                    <div class="head-div">
                        <h5>Mailing Address</h5>
                    </div>
                    <div class="radio-div">
                        <input type="radio" name="mailingaddress" value="true" data-bind="checked:MailingAddress" /><span>Yes</span>
                        <input type="radio" name="mailingaddress" value="false" data-bind="checked:MailingAddress" /><span>No</span>
                    </div>
                </div>
                <div class="row-fluid">
                    <div class="head-div">
                        <h5>Zip Code</h5>
                    </div>
                    <div class="radio-div">
                        <input type="radio" name="zipcode" value="true" data-bind="checked:ZipCode" disabled="disabled" /><span>Yes</span>
                        <input type="radio" name="zipcode" disabled="disabled" value="false" data-bind="checked:ZipCode" /><span>No</span>
                    </div>
                </div>
                <div class="row-fluid">
                    <div class="head-div">
                        <h5>Guest Card #</h5>
                    </div>
                    <div class="radio-div">
                        <input type="radio" name="guestcardnumber" value="true" data-bind="checked:GuestCardNumber" /><span>Yes</span>
                        <input type="radio" name="guestcardnumber" value="false" data-bind="checked:GuestCardNumber" /><span>No</span>
                    </div>
                </div>
                <div class="row-fluid">
                    <div class="head-div">
                        <h5>Referral Sources</h5>
                    </div>
                    <div class="radio-div">
                        <input type="radio" name="referralsources" value="true" data-bind="checked:ReferralSources" /><span>Yes</span>
                        <input type="radio" name="referralsources" value="false" data-bind="checked:ReferralSources" /><span>No</span>
                    </div>
                </div>
                <hr />

                <div class="row-fluid">
                    <div class="head-div">
                        <h5>Consumer App Invitation</h5>

                    </div>
                    <div class="radio-div">
                        <input type="radio" name="emailAllowed" value="true" data-bind="checked:EmailAllowed" /><span>Yes</span>
                        <input type="radio" name="emailAllowed" value="false" data-bind="checked:EmailAllowed" /><span>No</span>
                    </div>
                </div>
                @*<h5>Points of Interest Categories</h5>
                    <div id="pointsOfInterest" data-bind="template: { name: 'pois-template', foreach: pointsAll }">
                    </div>
                    <script type="text/html" id="pois-template">
                        <label class="checkbox">
                            <input type="checkbox" data-bind="attr: { value: ID }, checked: $root.pointsSelected"><span data-bind="text: Name"></span>
                        </label>
                    </script>*@
                <div class="form-actions">
                    <input type="button" class="btn btn-primary " value="Save Changes" data-bind="click:saveConfiguration" />
                    <input type="button" class="btn " value="Cancel" data-bind="click:getConfiguration" />
                </div>
            </div>
        }
    </div>

</section>
@section modal {

    <div id="myModal" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">×</span>
            </button>
            <h4 class="modal-title" id="mySmallModalLabel">
                This will delete the selected article(s). Are you sure?
                <a class="anchorjs-link" href="#mySmallModalLabel">
                    <span class="anchorjs-icon"></span>
                </a>
            </h4>
        </div>
        <div class="modal-body">
            <div class="row">
                <!-- Indicates a successful or positive action -->
                <div class="span1">
                    <button type="button" class="btn btn-success btn-confirm">
                        OK
                    </button>
                </div>
                <!-- Indicates a dangerous or potentially negative action -->
                <div class="span1">
                    <button type="button" class="btn btn-danger">
                        Cancel
                    </button>
                </div>
            </div>
        </div>
    </div>
}
@section scripts {


    <script src="//cdn.ckeditor.com/4.16.2/basic/ckeditor.js"></script>
    <script type="text/javascript">
        var CustomDefaults = {
            RowDetailsAllowed: false
        }

        ko.observableArray.fn.distinct = function (prop) {
            var target = this;
            target.index = {};
            target.index[prop] = ko.observable({});

            ko.computed(function () {
                //rebuild index
                var propIndex = {};

                ko.utils.arrayForEach(target(), function (item) {
                    var key = ko.utils.unwrapObservable(item[prop]);
                    if (key) {
                        propIndex[key] = propIndex[key] || [];
                        propIndex[key].push(item);
                    }
                });

                target.index[prop](propIndex);
            });

            return target;
        };
    </script>
    <script>
        $(document).ready(function () {
            // Replace the <textarea id="editor1"> with a CKEditor
            // instance, using default configuration.
            CKEDITOR.replace('IntroText');
            CKEDITOR.replace('DidYouKnow');
            consumerAppConfiguration.getConfiguration();
            $('#saveChanges').on('click', function () {
                consumerAppConfiguration.saveConfiguration();
            });
            $('#cancelChanges').on('click', function () {
                consumerAppConfiguration.getConfiguration();
            });
            $('#resourceSaveChanges').on('click', function () {
                consumerAppResources.saveAppResources();
            });
            $('#resourceCancelChanges').on('click', function () {
                consumerAppResources.cancelAppResources();
            });
            $(".btn-confirm").click(function () {
                $("#myModal").modal("toggle");
                deleteArticles();
            });
            $(".btn-danger").click(function () {
                $("#myModal").modal("toggle");
            });
        });
    </script>
    @*@if (Roles.IsUserInRole("BHIADMIN") || Roles.IsUserInRole("PARTNERSUPERADMIN"))
        {*@
    <script type="text/javascript">
        var consumerAppConfiguration = {
            saveConfiguration: function () {
                if (CKEDITOR.instances['IntroText'].getData().trim() == "" || CKEDITOR.instances['DidYouKnow'].getData().trim() == "") {
                    saveUnsuccessfulMessage("'Intro Text' and 'Did you know' field cannot be left blank!");
                } else {
                    $.post("@Url.Action("SaveConfigurableDetails")", { CommunityId: $('#drpCommunity').val(), DesignIntroText: CKEDITOR.instances['IntroText'].getData(), DesignDoYouKnow: CKEDITOR.instances['DidYouKnow'].getData() }, function (data) {
                        saveSuccessful();
                    }).fail(function () {
                        saveUnsuccessful();
                    });
                }
            },
            getConfiguration: function () {
                $.post("/Apps/GetDetailsByPartnerId", function (data) {
                    if (data != "Error") {
                        CKEDITOR.instances['IntroText'].setData(data.DesignIntroText);
                        CKEDITOR.instances['DidYouKnow'].setData(data.DesignDoYouKnow);
                    } else {
                        CKEDITOR.instances['IntroText'].setData('');
                        CKEDITOR.instances['DidYouKnow'].setData('');
                    }
                });
            },
            cancelConfiguration: function () {
                ResetForm();
            }
        };


        function ResetForm() {
            $('#drpCommunity').val("");
            CKEDITOR.instances['IntroText'].setData('');
            CKEDITOR.instances['DidYouKnow'].setData('');
        }

        function saveSuccessful() {
            resetSaveLabel();
            $("#confirmationMessage").addClass("sucessfully-alert");
            $("#confirmationMessage").text("Changes saved");
            $("#confirmationMessage").show();
            $("#confirmationMessage").fadeIn("1000").delay(2000).fadeOut('1500').hide(0);
        }
        function saveUnsuccessful() {
            resetSaveLabel();
            $("#confirmationMessage").addClass("unsucessfully-alert");
            $("#confirmationMessage").fadeIn("1000").delay(2000).fadeOut('1500').hide(0);
            $("#confirmationMessage").text("Save operation not completed");
            $("#confirmationMessage").show();
        }
        function saveUnsuccessfulMessage(message) {
            resetSaveLabel();
            $("#confirmationMessage").addClass("unsucessfully-alert");
            $("#confirmationMessage").fadeIn("1000").delay(2000).fadeOut('1500').hide(0);
            $("#confirmationMessage").text(message);
            $("#confirmationMessage").show();
        }
        function resetSaveLabel() {
            $("#confirmationMessage").removeClass("sucessfully-alert");
            $("#confirmationMessage").removeClass("unsucessfully-alert");
            $("#confirmationMessage").text("");
        }
        function deleteSelected() {
            $("#ErrorMessage").hide();
            var currentSelectedIds = [];
            @foreach (var item in Model)
            {
            <text>
            currentSelectedIds = currentSelectedIds.concat.apply(currentSelectedIds, jQuery("#@item.Title.Replace(" ", "_")").jqGrid('getGridParam', 'selarrrow'));
            </text>
            }
            if (currentSelectedIds.length == 0) {
                $("#lnkDeleteProspect").attr("href", "#");
                saveUnsuccessfulMessage("Please select atricle(s) to delete");
                goToByScroll("ErrorMessage");
            }
            else {
                $("#lnkDeleteProspect").attr("href", "#myModal");
            }
        }


        function deleteArticles() {
            var currentSelectedIds = [];
            var articlesList = "";
            @foreach (var item in Model)
            {
                <text>
            currentSelectedIds = currentSelectedIds.concat.apply(currentSelectedIds, jQuery("#@item.Title.Replace(" ", "_")").jqGrid('getGridParam', 'selarrrow'));
            </text>
        }
            $.each(currentSelectedIds, function (index, value) {
                if (articlesList.length > 0) {
                    articlesList = articlesList + "," + value;
                }
                else {
                    articlesList = value;
                }
            });
            $.ajax('@Url.Action("DeleteResourceArticles")', {
                data: JSON.stringify({
                    articlesInfo: articlesList
                }),
                type: "post",
                contentType: 'application/json',
                dataType: 'json',
                success: function (data, textStatus, xhr) {
                    if (data.Success == "false") {
                        saveUnsuccessful();
                        $("#ErrorMessage").show();
                        $("#ErrorMessage").html(data.Error);
                        goToByScroll("ErrorMessage");
                    }
                    else {
                        saveSuccessful();
                        $("#ErrorMessage").hide();
                        clearSelection();
                        // isAllChecked = false;
                        // isSelectAll=false;
                        @foreach (var item in Model)
                        {
                        <text>
                        jQuery("#@item.Title.Replace(" ", "_")").trigger('reloadGrid');
                        </text>
                        }
                        goToByScroll("confirmationMessage");
                        $('#FormValidation')[0].reset();
                        $('#resourceId').val('0');
                        $('#resourceSaveChanges').val("Add new");
                    }

                }
            });
        }

    </script>
    <script>
        $("#FormValidation").validate({
            onkeyup: function (element, event) {
                if (event == "keypress" && this.elementValue(element) === "") {
                    return;
                }
                else {
                    this.element(element);
                }
            },
            rules: {
                Title: {
                    required: true
                    //,
                    //error:"Resource title is required."
                },
                Url: {
                    required: true
                    //,
                    //error: "Resource URL is required."
                },
                ParentId: {
                    required: true
                    //,
                    //error: "Resource Section is required."
                }
            }, messages: {
                Title: "Resource title is required.",
                Url: "Resource URL is required.",
                ParentId: "Resource Section is required."
            }
        });
        var Configuration = {
            resourceConfiguration: ko.observableArray(),
            resourceHeadings: ko.observableArray()
        }
        var consumerAppResources = {
            saveAppResources: function () {
                if ($('#FormValidation').valid()) {
                    if ($("#parentId").val() == "Select Section") {
                        saveUnsuccessfulMessage("Please select Resource section!");
                        return false;
                    }
                    var expression = /[-a-zA-Z0-9@@:%_\+.~#?&//=]{2,256}\.[a-z]{2,4}\b(\/[-a-zA-Z0-9@@:%_\+.~#?&//=]*)?/gi;
                    var regex = new RegExp(expression);
                    var t = $("#resourceUrl").val();

                    if (t.match(regex)) {

                    } else {
                        saveUnsuccessfulMessage("Please provide a valid url!");
                        return false;
                    }
                    $.ajax({
                        url: "/Apps/UpdateResourceDetails",
                        type: 'POST',
                        data: $('#FormValidation').serializeArray(),
                        success: function () {

                            @foreach (var item in Model)
                        {
                            <text>
                            $('#' + '@item.Title.Replace(" ","_")').trigger('reloadGrid');
                            </text>
                        }
                            saveSuccessful();
                            $('#FormValidation')[0].reset();
                            $('#resourceId').val('0');
                            $('#resourceSaveChanges').val("Add new");
                        },
                        error: function () {
                            saveUnsuccessful();
                        }
                    })
                }
            },
            cancelAppResources: function () {
                $('#FormValidation')[0].reset();
                $('#resourceId').val('0')
                $('#resourceSaveChanges').val("Add new");
            }
        };

        function trim(a) {
            return a.replace(/\s/gi, "_");
        }
    </script>
    <script type="text/javascript">
        var viewResource = {};
        function load() {
            @foreach (var item in Model)
            {
            <text>
            var options = {
                update: function (e, ui) {
                    var IdsWithSequence = [];
                    var allRowsInGrid = $('#' + '@item.Title.Replace(" ","_")').jqGrid('getRowData');
                    if (typeof (allRowsInGrid) != "undefined") {
                        for (var i = 0; i < allRowsInGrid.length; i++) {
                            allRowsInGrid[i].Sequence = i + 1;
                        }
                        $.ajax({
                            url: '/Apps/SaveSequence',
                            type: 'POST',
                            data: { jsonStringConsumerAppResource: JSON.stringify(allRowsInGrid) },
                            success: function (data) {
                                saveSuccessful();
                            },
                            error: function () {
                                saveUnsuccessful();
                            }
                        })
                    }
                }
            }
            $('#' + '@item.Title.Replace(" ","_")').sortableRows(options);
            </text>
            }
        }

        function selectAllSelection() {
            if (idsToExclude.length > 0) {
                $('#cb_@PROSPECTS_GRID').prop('checked', false);
            } else if (idsToExclude.length == 0 && isSelectAll) {
                $('#cb_@PROSPECTS_GRID').prop('checked', true);
                idsToExclude = [];
            }
        }

        function onAllRowSelected(aRowids, status) {
            if (status) {
                for (i = 0; i < aRowids.length; i++) {
                    if (selectedIds.indexOf(aRowids[i]) < 0) {
                        selectedIds.push(aRowids[i]);
                        $('#jqg_Prospects_' + aRowids[i]).prop('checked', true);
                    }
                }
            }
            else {
                selectedIds = [];
                idsToExclude = [];
            }
        }

        function onRowSelected(rowid, status, grid) {
            if (status) {
                $('#resourceSaveChanges').val("Save changes");
                var res = {};
                res.ID = getColumnData("#" + $(grid).attr('id'), rowid, "ID");
                res.Title = getColumnData("#" + $(grid).attr('id'), rowid, "Title");
                res.URL = getColumnData("#" + $(grid).attr('id'), rowid, "URL");
                res.ParentId = getColumnData("#" + $(grid).attr('id'), rowid, "ParentId");
                $('#resourceTitle').val(res.Title);
                $('#resourceUrl').val(res.URL);
                $('#resourceId').val(res.ID);
                $('#parentId').val(res.ParentId);
            } else {
                var currentSelectedIds = [];
                var articlesList = "";
                @foreach (var item in Model)
                {
                    <text>
                currentSelectedIds = currentSelectedIds.concat.apply(currentSelectedIds, jQuery("#@item.Title.Replace(" ", "_")").jqGrid('getGridParam', 'selarrrow'));
                </text>
                }
                if (currentSelectedIds.length <= 0) {
                    $('#FormValidation')[0].reset();
                    $('#resourceId').val('0')
                    $('#resourceSaveChanges').val("Add new");
                } else {
                    var length = currentSelectedIds.length;
                    var id = currentSelectedIds[length-1];
                    grid = $("#"+id).parents('table').attr('id');
                    var res = {};
                    res.ID = getColumnData("#" + grid, id, "ID");
                    res.Title = getColumnData("#" + grid, id, "Title");
                    res.URL = getColumnData("#" + grid, id, "URL");
                    res.ParentId = getColumnData("#" + grid, id, "ParentId");
                    $('#resourceTitle').val(res.Title);
                    $('#resourceUrl').val(res.URL);
                    $('#resourceId').val(res.ID);
                    $('#parentId').val(res.ParentId);
                }
            }

        }

        function clearSelection() {
            isSelectAll = false;
            idsToExclude = [];
            selectedIds = [];
            loadClick = false;
            $("#ErrorMessage").hide();
        }
        function BindControls(rowId) {
            $("#ErrorMessage").hide();
        }
        function onPaging() {

            clearExcludeIds();
        }
        function onSort() {

            clearExcludeIds();
        }
        function clearExcludeIds() {
            var isChecked = $('#cb_@PROSPECTS_GRID').is(":checked");
            if (isSelectAll && isChecked) {
                idsToExclude = [];

            }

        }
    </script>
    @if (Roles.IsUserInRole("BHIADMIN") || Roles.IsUserInRole("PARTNERSUPERADMIN"))
    {
        <script type="text/javascript">
            var prospectConfiguration = function () {
                this.Phone = ko.observable("true");
                this.ZipCode = ko.observable("true");
                this.GuestCardNumber = ko.observable("true");
                this.MailingAddress = ko.observable("true");
                this.ReferralSources = ko.observable("true");

                this.EmailAllowed = ko.observable("true");
                this.ID = ko.observable("0");
                this.IsPartnerConfiguration = ko.observable("false");
                saveConfiguration = function () {
                    $.post("@Url.Action("SaveProspectConfiguration")", ko.toJS(this), function (data) {
                        kc.ID = ko.observable(data.id);
                        saveSuccessful();
                    }).fail(function () {
                        saveUnsuccessful();
                    });
                };
                getConfiguration = function () {
                    $.post("@Url.Action("GetConfiguration")", function (data) {
                        kc.Phone(data.prospectConfig.Phone.toString());
                        kc.ZipCode(data.prospectConfig.ZipCode.toString());
                        kc.GuestCardNumber(data.prospectConfig.GuestCardNumber.toString());
                        kc.MailingAddress(data.prospectConfig.MailingAddress.toString());
                        kc.ReferralSources(data.prospectConfig.ReferralSources.toString());
                        kc.ID(data.prospectConfig.ID.toString());
                        kc.EmailAllowed(data.prospectConfig.EmailAllowed.toString());
                    });
                };
            };
            var kc = new prospectConfiguration();
            $.when(this.getConfiguration()).done(function () {
                ko.applyBindings(kc);
            });
        </script>
    }

    @*}*@
}