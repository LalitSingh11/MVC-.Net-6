@using BHI.SalesArchitect.WebAdmin.Lib.Extensions
@using System.Web.Optimization
@model BHI.SalesArchitect.WebAdmin.Models.SiteMapPreview
@{
    Layout = null;
    var TopNavigationBar = Model.PartnerSettings.FirstOrDefault(x => x.Key.Equals(BHI.SalesArchitect.Core.Enumerations.PartnerSettingsKey.TopNavigationBar));
    var TopNavigationBarText = Model.PartnerSettings.FirstOrDefault(x => x.Key.Equals(BHI.SalesArchitect.Core.Enumerations.PartnerSettingsKey.TopNavigationBarText));
    var LotDetailHeaderBarGradientColor = Model.SiteMapConfigurations.FirstOrDefault(x => x.Configuration.Code.Equals("SMPCLR_Lot Detail Info Bar Gradient")) != null ? Model.SiteMapConfigurations.FirstOrDefault(x => x.Configuration.Code.Equals("SMPCLR_Lot Detail Info Bar Gradient")).Value : "";
    var LotDetailHeaderBarColor = Model.SiteMapConfigurations.FirstOrDefault(x => x.Configuration.Code.Equals("SMPCLR_Lot Detail Info Bar")) != null ? Model.SiteMapConfigurations.FirstOrDefault(x => x.Configuration.Code.Equals("SMPCLR_Lot Detail Info Bar")).Value : "";
    var LotDetailHeaderBarTextColor = Model.SiteMapConfigurations.FirstOrDefault(x => x.Configuration.Code.Equals("SMPCLR_Lot Detail Info Bar Text")) != null ? Model.SiteMapConfigurations.FirstOrDefault(x => x.Configuration.Code.Equals("SMPCLR_Lot Detail Info Bar Text")).Value : "";
    var serializer = new System.Web.Script.Serialization.JavaScriptSerializer();
    serializer.MaxJsonLength = Int32.MaxValue;
    var popup = serializer.Serialize(Model.PopupConfiguration);
    var configs = serializer.Serialize(Model.Legends);
    var svgHiddenBlocks = serializer.Serialize(Model.HiddenBlocks);
    var svgHiddenLotConfigs = serializer.Serialize(Model.HiddenLotConfigs);
    var HoldALotButtonText = serializer.Serialize(Model.HoldALotButtonText);
    #region Referrer check for kiosk

    var isHotspotBtn = true;
    var openLinkInModal = false;
    Uri referrer = HttpContext.Current.Request.UrlReferrer;
    Uri url = HttpContext.Current.Request.Url;
    if (referrer != null)
    {
        string original = referrer.OriginalString.ToLower();
        isHotspotBtn = !original.Contains("kiosk");
    }
    if (url != null)
    {
        var hotspotButtonParam = HttpUtility.ParseQueryString(url.Query).Get("DisplayHotspotsOnKiosks");
        if (hotspotButtonParam != null)
        {
            isHotspotBtn = hotspotButtonParam.ToLower().Equals("true") ? true : (hotspotButtonParam.ToLower().Equals("false") ? false : isHotspotBtn);
        }
        var linkParam = HttpUtility.ParseQueryString(url.Query).Get("openLinkInModal");
        if (linkParam != null)
        {
            openLinkInModal = linkParam.ToLower().Equals("true") ? true : (linkParam.ToLower().Equals("false") ? false : openLinkInModal);
        }
    }
    ViewBag.GoogleAnalyticsID = "UA-197854797-1";
    #endregion
}
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
    <meta http-equiv="X-UA-Compatible" content="IE=Edge" />
    <meta id="metaviewport" name="viewport" content="width=device-width, initial-scale=1" />
    <title>@Model.CommunityName</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css" />
    @Html.Partial("Partials/_googleAnalytics")
    @Styles.Render("~/content/bootstrap")
    @Styles.Render("~/Content/CommonCss")
    @Styles.Render("~/Content/mappreviewCss")
    @Scripts.Render("~/bundles/newsitemappreview")
    @Scripts.Render("~/bundles/validational")
    @Scripts.Render("~/bundles/knockout")

    <script>
        var isHotspotBtn = '@(isHotspotBtn.ToString().ToLower())' == 'true' ? true : false;
        var openLinkInModal = '@(openLinkInModal.ToString().ToLower())' == 'true' ? true : false;
        var holdALotInternalReference = '';
        var holdALotVal = '@ViewBag.HoldALot';
        var holdALot = holdALotVal.toUpperCase() == 'TRUE' ? true : false;
        var color = function (id, value, hiddenId, name, communityId, configurationId, code, status, key, partnerID, category) {
            var self = this;
            self.ID = id;
            self.Status = status;
            self.Code = code;
            self.CommunityID = communityId;
            self.Name = name;
            self.Value = value;
            self.HiddenId = hiddenId;
            self.Configuration = { ID: configurationId };
            self.key = key;
            self.partnerID = partnerID;
            self.category = category;
            self.ConfigurationID = configurationId;
        };

        var viewConfiguration =
        {
            communityConfiguration: ko.observableArray()
        }

        var data = @Html.Raw(configs);

        function resetSaveLabel() {
            $("#confirmationMessage").removeClass("sucessfully-alert");
            $("#confirmationMessage").removeClass("unsucessfully-alert");
            $("#confirmationMessage").text("");
        }
        function saveSuccessful() {
            resetSaveLabel();
            $("#confirmationMessage").addClass("sucessfully-alert");
            $("#confirmationMessage").text("Your request was sent. Thank you!");
            $("#confirmationMessage").show();
            $("#confirmationMessage").fadeIn("1000").delay(2000).fadeOut('1500').hide(0);
        }
        function saveUnsuccessful() {
            resetSaveLabel();
            $("#confirmationMessage").addClass("unsucessfully-alert");
            $("#confirmationMessage").fadeIn("1000").delay(2000).fadeOut('1500').hide(0);
            $("#confirmationMessage").text("Save operation not completed");
            $("#confirmationMessage").show();
        }
        function setLotholdALot(e) {
            logGAEvent("Hold-a-Lot", "ISP", "popup-open_HL");
            holdALotInternalReference = e.dataset.internalreference;
        }

        function setGAEvent() {
            requestInfoSource = "Lot";
            logGAEvent("Request-Info-lot", "ISP", "Request-info-popup-open_l");
        }

        /* When the user clicks on the button, toggle between hiding and showing the dropdown content */
        function myFunction() {
            document.getElementById("myDropdown").classList.toggle("show");
        }
        function openExternalLinkInModal(e) {
            document.getElementById('isp-external-link-iframe').setAttribute('src', e.dataset.link);
            document.getElementById('external-link-div').style.display = 'block';
        }
    </script>
    <style>
        html {
            -ms-content-zooming: none;
            /*-ms-touch-action: pan-x pan-y;*/
            /*-ms-touch-action: none;*/
            /*touch-action: none;*/
            -ms-scroll-chaining: none;
        }

        .mapContent {
            position: fixed;
        }

        .modal-dialog-newisp .modal-overview ul.plansul li {
            color: gray;
        }
    </style>
    @if (LotDetailHeaderBarColor != "" && LotDetailHeaderBarGradientColor != "")
    {
        <style>
            .top-info-bar {
                background-image:linear-gradient(@(LotDetailHeaderBarColor),@(LotDetailHeaderBarGradientColor)) !important;
            }
        </style>
    }
    @if (LotDetailHeaderBarTextColor != "")
    {
        <style>
            .lot-text-style.detail-row, .status-text-style.detail-row, #default-text , .block-info-panel, .column-info-next > div ,.column-info-next >span{
                color:@LotDetailHeaderBarTextColor !important
            }
        </style>
    }
</head>
<body>
    @if (Model.RequestInfoModal)
    {
        @Html.Partial("Partials/_modal", new BHI.SalesArchitect.WebAdmin.Models.ProspectLead() { CommunityID = Model.CommunityId.Value, IsZipCodeRequired = Model.IsZipCodeRequired, partnerID = Model.PartnerID })
    }
    @Html.Partial("Partials/_HoldALotRequest", new BHI.SalesArchitect.WebAdmin.Models.HolALotRequest() { CommunityID = Model.CommunityId ?? 0, IsZipCodeRequired = Model.IsZipCodeRequired, partnerID = Model.PartnerID })
    <div id="external-link-div" style="display:none;">
        @Html.Partial("Partials/_externalLink")
    </div>
    <div id="confirmationMessage" class="save-result"></div>
    <div class="main-content-page">

        @if (Model.ShowLoadingBar)
        {
            <div id="loadingBar">
                <svg style="width: auto; height: auto; position: absolute; margin: 0 auto; left: 0;
                    bottom: 0; top: 40%; right: 0;" version="1.1" id="SpinningFlower" xmlns="http://www.w3.org/2000/svg"
                     xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="131.548px"
                     height="130.357px" viewbox="476.119 801.833 131.548 130.357" enable-background="new 476.119 801.833 131.548 130.357"
                     xml:space="preserve">
<g id="actor_3">
                <path fill="#523092" d="M527.145,896.222c3.235,1.432,8.403-0.149,8.403-0.149s-2.301-4.887-5.535-6.322
		c-3.235-1.432-6.498-1.147-7.29,0.642C521.93,892.181,523.912,894.789,527.145,896.222" />































































                <path fill="#523092" d="M528.527,902.669c-2.361,2.631-3.097,5.825-1.641,7.128c1.455,1.308,4.548,0.231,6.91-2.404
		c2.362-2.635,2.453-8.036,2.453-8.036S530.889,900.034,528.527,902.669" />































































                <path fill="#523092" d="M539.592,899.701c0,0-1.011,5.306,0.764,8.369c1.772,3.059,4.582,4.746,6.274,3.763
		c1.688-0.979,1.621-4.255-0.154-7.313C544.702,901.458,539.592,899.701,539.592,899.701" />































































                <path fill="#523092" d="M554.668,893.689c-0.409-1.911-3.547-2.86-7.006-2.117c-3.461,0.741-6.711,5.058-6.711,5.058
		s4.738,2.604,8.196,1.862C552.606,897.748,555.076,895.6,554.668,893.689" />































































                <path fill="#523092" d="M535.712,886.445c-0.362,3.518,2.741,7.943,2.741,7.943s3.939-3.698,4.303-7.216s-0.919-6.537-2.862-6.738
		C537.948,880.236,536.077,882.927,535.712,886.445" />































































</g>
<g id="actor_2">
                <path fill="#97C06D" d="M529.677,887.471c5.016,2.221,13.03-0.231,13.03-0.231s-3.568-7.578-8.583-9.803
		c-5.016-2.22-10.076-1.778-11.305,0.995C521.589,881.204,524.663,885.249,529.677,887.471" />































































                <path fill="#97C06D" d="M531.82,897.468c-3.661,4.08-4.802,9.032-2.544,11.053c2.256,2.028,7.052,0.357,10.715-3.727
		c3.663-4.086,3.804-12.461,3.804-12.461S535.482,893.383,531.82,897.468" />































































                <path fill="#97C06D" d="M548.977,892.867c0,0-1.568,8.228,1.184,12.977c2.748,4.743,7.104,7.359,9.729,5.836
		c2.617-1.518,2.513-6.597-0.239-11.34C556.901,895.591,548.977,892.867,548.977,892.867" />































































                <path fill="#97C06D" d="M572.355,883.543c-0.635-2.964-5.5-4.436-10.864-3.282c-5.366,1.15-10.407,7.843-10.407,7.843
		s7.348,4.038,12.708,2.887C569.158,889.837,572.988,886.507,572.355,883.543" />































































                <path fill="#97C06D" d="M542.961,872.311c-0.561,5.455,4.25,12.316,4.25,12.316s6.108-5.734,6.672-11.19
		s-1.426-10.136-4.439-10.448C546.428,862.683,543.528,866.856,542.961,872.311" />































































</g>
<g id="actor_1">
                <path fill="#AA1E41" d="M530.586,884.329c5.655,2.504,14.691-0.26,14.691-0.26s-4.023-8.544-9.678-11.053
		c-5.655-2.503-11.361-2.005-12.746,1.122C521.467,877.264,524.932,881.824,530.586,884.329" />































































                <path fill="#AA1E41" d="M533.002,895.6c-4.128,4.6-5.415,10.183-2.868,12.462c2.544,2.286,7.951,0.403,12.081-4.202
		c4.13-4.607,4.289-14.05,4.289-14.05S537.13,890.995,533.002,895.6" />































































                <path fill="#AA1E41" d="M552.346,890.413c0,0-1.768,9.277,1.335,14.632c3.099,5.347,8.01,8.297,10.969,6.58
		c2.951-1.712,2.834-7.439-0.269-12.786C561.281,893.485,552.346,890.413,552.346,890.413" />































































                <path fill="#AA1E41" d="M578.704,879.901c-0.716-3.341-6.202-5.001-12.249-3.701c-6.05,1.296-11.733,8.843-11.733,8.843
		s8.284,4.552,14.329,3.255C575.1,886.997,579.419,883.243,578.704,879.901" />































































                <path fill="#AA1E41" d="M545.564,867.237c-0.633,6.151,4.792,13.887,4.792,13.887s6.886-6.465,7.522-12.616
		s-1.608-11.428-5.004-11.78C549.472,856.381,546.202,861.086,545.564,867.237" />































































</g>
<script type="text/ecmascript">
    <![CDATA[
    (function () { var actors = {}; actors.actor_1 = { node: document.getElementById("SpinningFlower").getElementById("actor_1"), type: "circle", cx: 50, cy: 75, dx: 18, dy: 17, opacity: 0.76 }; actors.actor_2 = { node: document.getElementById("SpinningFlower").getElementById("actor_2"), type: "circle", cx: 50, cy: 75, dx: 18, dy: 17, opacity: 1 }; actors.actor_3 = { node: document.getElementById("SpinningFlower").getElementById("actor_3"), type: "circle", cx: 50, cy: 75, dx: 18, dy: 17, opacity: 1 }; var tricks = {}; tricks.trick_1 = (function (_, t) { t = (function (n) { return .5 > n ? 2 * n * n : -1 + (4 - 2 * n) * n })(t) % 1, t = t * 4 % 1, t = 0 > t ? 1 + t : t; var a = (_.node, -25 * Math.cos(-90 * Math.PI / 180)), i = 25 * Math.sin(-90 * Math.PI / 180); a += 25 * Math.cos((-90 - 360 * t * 1) * Math.PI / 180), i -= 25 * Math.sin((-90 - 360 * t * 1) * Math.PI / 180), _._tMatrix[4] += a, _._tMatrix[5] += i }); tricks.trick_2 = (function (t, i) { i = (function (n) { return .5 > n ? 2 * n * n : -1 + (4 - 2 * n) * n })(i) % 1, i = 0 > i ? 1 + i : i; var _ = t.node; 0.1 >= i ? _.setAttribute("opacity", i * (t.opacity / 0.1)) : i >= 0.9 ? _.setAttribute("opacity", t.opacity - (i - 0.9) * (t.opacity / (1 - 0.9))) : _.setAttribute("opacity", t.opacity) }); var scenarios = {}; scenarios.scenario_1 = { actors: ["actor_1", "actor_2", "actor_3"], tricks: [{ trick: "trick_1", start: 0, end: 1 }, { trick: "trick_2", start: 0, end: 1}], startAfter: 0, duration: 6000, actorDelay: 300, repeat: 0, repeatDelay: 1000 }; var _reqAnimFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.oRequestAnimationFrame, fnTick = function (t) { var r, a, i, e, n, o, s, c, m, f, d, k, w; for (c in actors) actors[c]._tMatrix = [1, 0, 0, 1, 0, 0]; for (s in scenarios) for (o = scenarios[s], m = t - o.startAfter, r = 0, a = o.actors.length; a > r; r++) { if (i = actors[o.actors[r]], i && i.node && i._tMatrix) for (f = 0, m >= 0 && (d = o.duration + o.repeatDelay, o.repeat > 0 && m > d * o.repeat && (f = 1), f += m % d / o.duration), e = 0, n = o.tricks.length; n > e; e++) k = o.tricks[e], w = (f - k.start) * (1 / (k.end - k.start)), tricks[k.trick] && tricks[k.trick](i, Math.max(0, Math.min(1, w))); m -= o.actorDelay } for (c in actors) i = actors[c], i && i.node && i._tMatrix && i.node.setAttribute("transform", "matrix(" + i._tMatrix.join() + ")"); _reqAnimFrame(fnTick) }; _reqAnimFrame(fnTick); })()
        ]]>
</script>
</svg>
            </div>
        }


        <div id="confirmationMessage" class="save-result"></div>
        <div class="fTable fConsumeAll">
            @if (!Model.IsMasterSitePlan && Model.ShowHomesiteFilter && Model.ShowHomesiteFilterForCommunity)
            {
                <div class="homesite-filter">
                    <a onclick="myFunction()" class="refine_button" style="cursor:pointer;"><i class="fa fa-filter"></i><span>@Model.PopupConfiguration["ISP2_POPUP_HOMESITE"] Status</span></a>
                    <div id="myDropdown" class="refine_dropdown">
                        <a class="close-refine" id="close-refine-button" style="cursor:pointer;">×</a>
                        <ul class="homesite_status" id="lotColorScheme" data-bind="template: { name: 'configuration-template', foreach: communityConfiguration }"></ul>
                        <script type="text/html" id="configuration-template">
                            <!-- ko if: Code.indexOf("SPSTSCLR") !== -1 && Status === "ACTIVE" -->
                            <li><input type="checkbox" class="homesite_filter" data-bind="value: Name" name="homesite_filter"><span data-bind="text: Name"></span> <span class="status" data-bind="style:{backgroundColor: Value}"></span></li>
                            <!-- /ko -->
                        </script>
                        <div class="buttons">
                            <a class="action_btn reset" id="resetHomesiteFilter" style="cursor:pointer;">Clear</a><a class="action_btn apply" id="applyHomesiteFilter" style="cursor:pointer;">Apply</a>
                        </div>
                    </div>
                </div>
            }
            <div class="fTableRow">
                <div class="fTableCell fConsumeAll">
                    <div class="fConsumeAll refPosition">
                        <div id="mainPanel" class="fLeft fConsumeAll">
                            <div class="fTable fConsumeAll">
                                <div class="fTableRow barBaseDimension" style="display:none;">
                                    <div class="fTableCell barBaseDimension">
                                        <div id="panelTopInfo" class="panelTopInfo">
                                            <div class="panelTopInfoContent">
                                                <table>
                                                    <tr>
                                                        <td>
                                                            <button class="cButton" id="toggleTopPaneButton">
                                                                <i class="icon icon-arrowdown"></i>
                                                            </button>
                                                        </td>
                                                        <td class="top-panel-header-width">
                                                            <div id="topPaneHeader">
                                                            </div>
                                                            <div id="topPaneSub">
                                                            </div>
                                                        </td>
                                                        <td class="top-panel-width">
                                                            <div id="topPaneInfo">
                                                            </div>
                                                            <div id="topPaneDefaultText">
                                                                Tap a homesite below or choose a plan at right
                                                            </div>
                                                        </td>
                                                    </tr>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="fTableRow fConsumeAll">

                                    <div class="fTableCell fConsumeAll mapPanel">

                                        <div class="mapContent">
                                            <!-- START MAP PANEL CONTENT //-->
                                            <div id="mapData" style="display: block">
                                                <div class="mapButtonBar">
                                                    <div class="slider-map" style="    position: absolute; left: 0;width: inherit;top: 179px;">
                                                        <input id="svgslider" type="text" data-slider="true" data-slider-vertical="true"
                                                               data-slider-range="1,5" />
                                                    </div>
                                                    <div class="btn-map">

                                                        <button id="resetSVG" title="Reset" style=" background: #3d688b !important; box-shadow:none !important;">
                                                            <i class="fa fa-undo" aria-hidden="true" style="color:#fff !important; font-size: 18px;"></i>
                                                        </button>
                                                    </div>
                                                </div>
                                                @Html.Raw(Model.MapData)
                                            </div>
                                            <!-- END MAP PANEL CONTENT //-->
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="sa-loading-bar" style="display:none">
        <div class="sa-loading-info">
            <img src="~/Content/images/pdfloading.svg" />
            <p class="loading-text">Generating PDF...</p>
        </div>
    </div>
    @if (Model.ShowBottomBar)
    {
        <div class="main-footer testing">
            <div class="fleft com-name">
                <h3>@Model.CommunityName</h3> <span class="seperator">|</span>
                <div class="dropup">
                    @if (@Model.OtherCommunities != null && Model.OtherCommunities.Count() > 0)
                    {
                        <a class="btn btn-primary dropdown-toggle" href="#" data-toggle="dropdown" style="outline:none;">
                            Change Community
                            <span class="caret"></span>
                        </a>
                        <ul class="dropdown-menu">
                            @foreach (var c in @Model.OtherCommunities)
                            {
                                if (c.NewIsp)
                                {
                                    <li>@Html.ActionLink(c.Name, "NewIsp", "SiteMapPreview", new { siteID = @c.SiteID, communityID = c.ID }, new { @class = "masterplan-data" })</li>
                                }
                                else
                                {
                                    <li>@Html.ActionLink(c.Name, "Index", "SiteMapPreview", new { siteID = @c.SiteID, communityID = c.ID }, new { @class = "masterplan-data" })</li>
                                }
                            }

                        </ul>
                    }
                </div>
            </div>
            <div class="fright footer-buttons">
                @if (@Model.OtherCommunities != null && !Model.IsMasterSitePlan)
                {

                    <a href='@Url.Action("NewISP", "SiteMapPreview", new { communityID = Model.CommunityId, masterSiteID = Model.MasterSiteId })' class="footer-btn btn">
                        <img src="../../Content/images/ic_masterplan.png" /> Master Plan
                    </a>
                }
                <ol class="footer-ul">
                    <li id="getPdf"> <i title="Download Pdf" class="fa fa-file-pdf-o" aria-hidden="true" style="font-size:18px; color:#fff;"></i></li>
                    @if (Model.RequestInfoModal)
                    {
                        <li id="ri-bottom" data-toggle="modal" data-target="#myModal"><i title="Request Info" class="fa fa-envelope-o" aria-hidden="true" style="font-size:18px; color:#fff;"></i></li>
                    }
                </ol>
            </div>
            <input type="hidden" id="hdnRequestModel" value="@Html.Raw(Json.Encode(Model.RequestInfoModal))" />
        </div>
    }
    <script type="text/javascript">
    var masterPlan = querystring('mastersiteid').length > 0 || '@Model.IsMasterSitePlan' == 'true' || '@Model.IsMasterSitePlan' == 'True';
    var isHoverAllowed = '@Model.IsHoverAllowed' == 'True'?true:false;
        $(function () {
            setupSiteMapPreview(@Html.Raw(Json.Encode(Model.LotData)),@Model.PartnerID,@Html.Raw(Json.Encode(Model.OtherCommunities)),@Html.Raw(Json.Encode(Model.Legends)),@Html.Raw(Json.Encode(Model.DefaultListingData)),@Html.Raw(Json.Encode(Model.RequestInfoModal)),@Html.Raw(Json.Encode(Model.ShowAllPlans)),@Html.Raw(popup),@Html.Raw(Json.Encode(Model.SendLotId)), @Html.Raw(Json.Encode(Model.EnableHoverClickForUnreleased)), @Html.Raw(svgHiddenBlocks), @Html.Raw(svgHiddenLotConfigs), @Html.Raw(HoldALotButtonText));
            resizeElementsPreview();
        });
        $(document).ready(function(){
            initReadyFunctions();

            var mvp = document.getElementById('metaviewport');
            if (!(/Android/i.test(navigator.userAgent)) || ((/Android/i.test(navigator.userAgent)) && $(window).width() > 768)) {
                mvp.setAttribute('content', 'width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no');
                $('html').css({ 'touch-action': 'none', '-ms-touch-action': 'none' });
            } else {
                mvp.setAttribute('content', 'width=device-width, initial-scale=1, minimum-scale=1, user-scalable=yes');
                $('.mapButtonBar').css("display", "none");
            }
        });

        viewConfiguration.communityConfiguration([]);

        $.each(data, function (intIndex) {
            viewConfiguration.communityConfiguration.push(new color(data[intIndex].ID, data[intIndex].Value,
                data[intIndex].HiddenId, data[intIndex].Configuration.Name, data[intIndex].CommunityID,
                data[intIndex].ConfigurationID, data[intIndex].Configuration.Code, data[intIndex].ActivityState.Code, "", data[intIndex].Configuration.partnerID));
        });

        ko.applyBindings(viewConfiguration, $("#lotColorScheme")[0]);
        function querystring(key) {
            var re = new RegExp('(?:\\?|&)' + key + '=(.*?)(?=&|$)', 'gi');
            var r = [],
                m;
            while ((m = re.exec(document.location.search)) != null) r.push(m[1]);
            return r;
        }
        if (querystring("DisplayHotspotsOnKiosks").length > 0) {
            isHotspotBtn = querystring("DisplayHotspotsOnKiosks").length > 0 && (querystring("DisplayHotspotsOnKiosks")[0].toLowerCase() == 'true') ? true : false;
        }
        if (querystring("openLinkInModal").length > 0) {
            openLinkInModal = querystring("openLinkInModal").length > 0 && (querystring("openLinkInModal")[0].toLowerCase() == 'true') ? true : false;
        }
        if ('@Model.IsMasterSitePlan.ToString().ToLower()' == 'true') {
            document.body.classList.add("master-map-view");
        }
    </script>
    <div class="modal-dialog modal-dialog-newisp" id="modaldialog" style="display:none">

        <!-- Modal content-->

    </div>

</body>
</html>
